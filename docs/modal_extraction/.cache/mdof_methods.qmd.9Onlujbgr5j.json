{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "title: Mdof methods\n",
                "format:\n",
                "  html:\n",
                "    toc: true\n",
                "    number-sections: true\n",
                "engine: julia\n",
                "execute:\n",
                "  freeze: auto\n",
                "  cache: true\n",
                "---"
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "#| output: false\n",
                "using StructuralVibration, ShareAdd\n",
                "@usingany CairoMakie"
            ],
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": "\u001b[91m\u001b[1m┌ \u001b[22m\u001b[39m\u001b[91m\u001b[1mError: \u001b[22m\u001b[39mError during loading of extension QuartoNotebookWorkerMakieExt of QuartoNotebookWorker, use `Base.retry_load_extensions()` to retry.\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m  exception =\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m1-element ExceptionStack:\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   InitError: MethodError: no method matching isless(::Nothing, ::VersionNumber)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   The function `isless` exists, but no method is defined for this combination of argument types.\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0mClosest candidates are:\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  isless(\u001b[91m::VersionNumber\u001b[39m, ::VersionNumber)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m\u001b[90m   @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m\u001b[4mversion.jl:201\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  isless(\u001b[91m::Missing\u001b[39m, ::Any)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m\u001b[90m   @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m\u001b[4mmissing.jl:87\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  isless(::Any, \u001b[91m::Missing\u001b[39m)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m\u001b[90m   @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m\u001b[4mmissing.jl:88\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  ...\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   Stacktrace:\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [1] \u001b[0m\u001b[1m<\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mx\u001b[39m::\u001b[0mNothing, \u001b[90my\u001b[39m::\u001b[0mVersionNumber\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4moperators.jl:399\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [2] \u001b[0m\u001b[1mconfigure\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[36mQuartoNotebookWorkerMakieExt\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/ext/\u001b[39m\u001b[90m\u001b[4mQuartoNotebookWorkerMakieExt.jl:22\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [3] \u001b[0m\u001b[1m__init__\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[36mQuartoNotebookWorkerMakieExt\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/ext/\u001b[39m\u001b[90m\u001b[4mQuartoNotebookWorkerMakieExt.jl:32\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [4] \u001b[0m\u001b[1mrun_module_init\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mmod\u001b[39m::\u001b[0mModule, \u001b[90mi\u001b[39m::\u001b[0mInt64\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1415\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [5] \u001b[0m\u001b[1mregister_restored_modules\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90msv\u001b[39m::\u001b[0mCore.SimpleVector, \u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90mpath\u001b[39m::\u001b[0mString\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1403\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [6] \u001b[0m\u001b[1m_include_from_serialized\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90mpath\u001b[39m::\u001b[0mString, \u001b[90mocachepath\u001b[39m::\u001b[0mString, \u001b[90mdepmods\u001b[39m::\u001b[0mVector\u001b[90m{Any}\u001b[39m; \u001b[90mregister\u001b[39m::\u001b[0mBool\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1291\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [7] \u001b[0m\u001b[1m_include_from_serialized\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1246\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [8] \u001b[0m\u001b[1m_require_search_from_serialized\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90msourcepath\u001b[39m::\u001b[0mString, \u001b[90mbuild_id\u001b[39m::\u001b[0mUInt128, \u001b[90mstalecheck\u001b[39m::\u001b[0mBool; \u001b[90mreasons\u001b[39m::\u001b[0mDict\u001b[90m{String, Int64}\u001b[39m, \u001b[90mDEPOT_PATH\u001b[39m::\u001b[0mVector\u001b[90m{String}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2087\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [9] \u001b[0m\u001b[1m__require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mNothing\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2599\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [10] \u001b[0m\u001b[1m_require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90muuidkey\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mNothing\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2465\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [11] \u001b[0m\u001b[1m_require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90muuidkey\u001b[39m::\u001b[0mBase.PkgId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2459\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [12] \u001b[0m\u001b[1mrun_extension_callbacks\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mextid\u001b[39m::\u001b[0mBase.ExtensionId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1579\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [13] \u001b[0m\u001b[1mrun_extension_callbacks\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkgid\u001b[39m::\u001b[0mBase.PkgId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1616\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [14] \u001b[0m\u001b[1mrun_package_callbacks\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mmodkey\u001b[39m::\u001b[0mBase.PkgId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1432\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [15] \u001b[0m\u001b[1m_require_search_from_serialized\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90msourcepath\u001b[39m::\u001b[0mString, \u001b[90mbuild_id\u001b[39m::\u001b[0mUInt128, \u001b[90mstalecheck\u001b[39m::\u001b[0mBool; \u001b[90mreasons\u001b[39m::\u001b[0mDict\u001b[90m{String, Int64}\u001b[39m, \u001b[90mDEPOT_PATH\u001b[39m::\u001b[0mVector\u001b[90m{String}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2106\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [16] \u001b[0m\u001b[1m_require_search_from_serialized\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1981\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [17] \u001b[0m\u001b[1m__require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mString\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2599\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [18] \u001b[0m\u001b[1m_require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90muuidkey\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mString\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2465\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [19] \u001b[0m\u001b[1mmacro expansion\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2393\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [20] \u001b[0m\u001b[1mmacro expansion\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mlock.jl:376\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [21] \u001b[0m\u001b[1m__require\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90minto\u001b[39m::\u001b[0mModule, \u001b[90mmod\u001b[39m::\u001b[0mSymbol\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2358\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [22] \u001b[0m\u001b[1mrequire\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90minto\u001b[39m::\u001b[0mModule, \u001b[90mmod\u001b[39m::\u001b[0mSymbol\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2334\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [23] top-level scope\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/Documents/01_Recherche/04_Projets/Codes/Julia/StructuralVibration/docs/modal_extraction/\u001b[39m\u001b[90m\u001b[4mmdof_methods.qmd:17\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [24] \u001b[0m\u001b[1meval\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mm\u001b[39m::\u001b[0mModule, \u001b[90me\u001b[39m::\u001b[0mAny\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mCore\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mboot.jl:489\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [25] \u001b[0m\u001b[1m(::QuartoNotebookWorker.var\"#21#22\"{Module, Expr})\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:222\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [26] \u001b[0m\u001b[1m(::QuartoNotebookWorker.Packages.IOCapture.var\"#12#13\"{Type{InterruptException}, QuartoNotebookWorker.var\"#21#22\"{Module, Expr}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}})\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker.Packages.IOCapture\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/vendor/IOCapture/src/\u001b[39m\u001b[90m\u001b[4mIOCapture.jl:170\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [27] \u001b[0m\u001b[1mwith_logstate\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mQuartoNotebookWorker.Packages.IOCapture.var\"#12#13\"\u001b[90m{Type{InterruptException}, QuartoNotebookWorker.var\"#21#22\"{Module, Expr}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}}\u001b[39m, \u001b[90mlogstate\u001b[39m::\u001b[0mBase.CoreLogging.LogState\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase.CoreLogging\u001b[39m \u001b[90m./logging/\u001b[39m\u001b[90m\u001b[4mlogging.jl:540\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [28] \u001b[0m\u001b[1mwith_logger\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mFunction, \u001b[90mlogger\u001b[39m::\u001b[0mBase.CoreLogging.ConsoleLogger\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase.CoreLogging\u001b[39m \u001b[90m./logging/\u001b[39m\u001b[90m\u001b[4mlogging.jl:651\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [29] \u001b[0m\u001b[1mcapture\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mQuartoNotebookWorker.var\"#21#22\"\u001b[90m{Module, Expr}\u001b[39m; \u001b[90mrethrow\u001b[39m::\u001b[0mType, \u001b[90mcolor\u001b[39m::\u001b[0mBool, \u001b[90mpassthrough\u001b[39m::\u001b[0mBool, \u001b[90mcapture_buffer\u001b[39m::\u001b[0mIOBuffer, \u001b[90mio_context\u001b[39m::\u001b[0mVector\u001b[90m{Pair{Symbol, Any}}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker.Packages.IOCapture\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/vendor/IOCapture/src/\u001b[39m\u001b[90m\u001b[4mIOCapture.jl:167\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [30] \u001b[0m\u001b[1mcapture\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:248\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [31] \u001b[0m\u001b[1mio_capture\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mFunction; \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m, \u001b[90mkws\u001b[39m::\u001b[0m@Kwargs\u001b[90m{rethrow::DataType, color::Bool, io_context::Vector{Pair{Symbol, Any}}}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:250\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [32] \u001b[0m\u001b[1mio_capture\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:246\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [33] \u001b[0m\u001b[1minclude_str\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mmod\u001b[39m::\u001b[0mModule, \u001b[90mcode\u001b[39m::\u001b[0mString; \u001b[90mfile\u001b[39m::\u001b[0mString, \u001b[90mline\u001b[39m::\u001b[0mInt64, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:201\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [34] \u001b[0m\u001b[1m#invokelatest_gr#232\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mreflection.jl:1282\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [35] \u001b[0m\u001b[1minvokelatest_gr\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mreflection.jl:1274\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [36] \u001b[0m\u001b[1m#7\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:18\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [37] \u001b[0m\u001b[1mwith_inline_display\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mQuartoNotebookWorker.var\"#7#8\"\u001b[90m{String, String, Int64, Dict{Any, Any}}\u001b[39m, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mInlineDisplay.jl:31\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [38] \u001b[0m\u001b[1m_render_thunk\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mthunk\u001b[39m::\u001b[0mFunction, \u001b[90mcode\u001b[39m::\u001b[0mString, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m, \u001b[90mis_expansion_ref\u001b[39m::\u001b[0mBase.RefValue\u001b[90m{Bool}\u001b[39m; \u001b[90minline\u001b[39m::\u001b[0mBool\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:43\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [39] \u001b[0m\u001b[1m_render_thunk\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:35\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [40] \u001b[0m\u001b[1mrender\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mcode\u001b[39m::\u001b[0mString, \u001b[90mfile\u001b[39m::\u001b[0mString, \u001b[90mline\u001b[39m::\u001b[0mInt64, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m; \u001b[90minline\u001b[39m::\u001b[0mBool\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:15\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [41] \u001b[0m\u001b[1mrender\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mcode\u001b[39m::\u001b[0mString, \u001b[90mfile\u001b[39m::\u001b[0mString, \u001b[90mline\u001b[39m::\u001b[0mInt64, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:1\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [42] \u001b[0m\u001b[1mrender\u001b[22m\u001b[0m\u001b[1m(\u001b[22m::\u001b[0mString, ::\u001b[0mVararg\u001b[90m{Any}\u001b[39m; \u001b[90mkwargs\u001b[39m::\u001b[0m@Kwargs\u001b[90m{}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[33mMain\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/\u001b[39m\u001b[90m\u001b[4mstartup.jl:145\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [43] top-level scope\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m\u001b[4mnone:1\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [44] \u001b[0m\u001b[1meval\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mm\u001b[39m::\u001b[0mModule, \u001b[90me\u001b[39m::\u001b[0mAny\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mCore\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mboot.jl:489\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [45] \u001b[0m\u001b[1m(::Main.var\"#22#23\")\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mchan\u001b[39m::\u001b[0mChannel\u001b[90m{Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[33mMain\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/\u001b[39m\u001b[90m\u001b[4mstartup.jl:158\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [46] \u001b[0m\u001b[1m(::Base.var\"#562#563\"{Main.var\"#22#23\", Channel{Any}})\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mchannels.jl:141\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   during initialization of module QuartoNotebookWorkerMakieExt\n\u001b[91m\u001b[1m└ \u001b[22m\u001b[39m\u001b[90m@ Base loading.jl:1589\u001b[39m\n"
                }
            ],
            "execution_count": 1
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "The Mdof methods are based on the assumption that the system can be represented as a multiple degree of freedom system. They are generally based on the construction of a high-order polynomial matrix whose coefficients are estimated from the measured FRFs. As for the SDOF methods, the estimation of the modal parameters is divided into two steps:\n",
                "\n",
                "1. estimation of the poles of the system to extract the natural frequencies and modal damping ratios,\n",
                "2. estimation of the residues to extract the mode shapes.\n",
                "\n",
                "\n",
                "## Natural frequencies and damping ratios extraction\n",
                "The poles of the system are then obtained as the roots of the characteristic polynomial associated with this polynomial matrix. Three methods are implemented in this package:\n",
                "\n",
                "* the Least-Squares Complex Exponential (LSCE) method,\n",
                "* the Least-Squares Complex Frequency-domain (LSCF) method.\n",
                "* the Polyreference Least-Squares Complex Frequency-domain (pLSCF) method,\n",
                "\n",
                "\n",
                "### LSCE method\n",
                "\n",
                "The LSCE method is based on the assumption that the system can be modeled as a sum of complex exponentials in the time domain. The impulse response function (IRF) between an output $o$ ($o = 1, \\ldots, n_o$) and an input $i$ ($i = 1, \\ldots, n_i$) can be modeled as:\n",
                "$$\n",
                "h_{oi}(t) = \\sum_{k = 1}^n \\left(c_k e^{\\lambda_k t} + c_k^\\ast e^{-\\lambda_k^\\ast t}\\right) = 2 Re\\left(\\sum_{k = 1}^n c_k e^{\\lambda_k t}\\right).\n",
                "$$\n",
                "\n",
                "When sampling the IRF at a sampling period $T_s$, one obtains the following discrete-time model:\n",
                "$$\n",
                "h_{oi}[m] = 2 Re\\left(\\sum_{k = 1}^n c_k z_k^m\\right) \\text{ with } z_k = e^{\\lambda_k T_s},\n",
                "$$\n",
                "for $m = 0, 1, \\ldots, 2n$, ($n$ is the model order). According to the Prony's method, the poles $\\lambda_k$ can be calculated from the roots of the following characteristic polynomial:\n",
                "$$\n",
                "\\sum_{m = 0}^{2n} \\beta_m z_k^m = 0 \\text{ with } \\beta_{2n} = 1.\n",
                "$$\n",
                "\n",
                "The coefficients $\\beta_l$ of the characteristic polynomial can be estimated from the sampled IRF $h_{oi}[m]$. Todo so, one first multiply $h_{oi}[m]$ by the corresponding coefficients $\\beta_m$ and then sums the resulting equations for $m = 0, 1, \\ldots, 2n$. This leads to the following homogeneous set of equations:\n",
                "$$\n",
                "\\sum_{m = 0}^{2n} \\beta_m h_{oi}[m] = 2 Re\\left(\\sum_{k = 1}^{n} c_k \\sum_{m = 0}^{2n} \\beta_m z_k^m\\right).\n",
                "$$\n",
                "\n",
                "When $z_k$ is a root of the characteristic polynomial, the right-hand side of the previous equation is equal to zero. Therefore, one can estimate the coefficients $\\beta_m$ by solving the following set of linear equations:\n",
                "$$\n",
                "\\sum_{m = 0}^{2n} \\beta_m h_{oi}[m] = 0.\n",
                "$$\n",
                "\n",
                "The previous equation can be derived using different set of data points, $h_{oi}[m]$, $h_{oi}[m+1]$, $\\ldots$, $h_{oi}[m + 2n]$  to obtain an overdetermined set of linear equations that can be solved in the least-squares sense[^1]. In this package, the coefficients $\\beta_m$ are estimated by solving the following set of equations:\n",
                "$$\n",
                "\\begin{bmatrix}\n",
                "h_{oi}[0] & h_{oi}[1] & \\ldots & h_{oi}[2n-1] \\\\\n",
                "h_{oi}[1] & h_{oi}[2] & \\ldots & h_{oi}[2n] \\\\\n",
                "\\vdots & \\vdots & \\ddots & \\vdots \\\\\n",
                "h_{oi}[2n-1] & h_{oi}[2n] & \\ldots & h_{oi}[4n-2]\n",
                "\\end{bmatrix}\n",
                "\\begin{bmatrix}\n",
                "\\beta_0 \\\\\n",
                "\\beta_1 \\\\\n",
                "\\vdots \\\\\n",
                "\\beta_{2n-1}\n",
                "\\end{bmatrix}\n",
                "= -\\begin{bmatrix}\n",
                "h_{oi}[2n] \\\\\n",
                "h_{oi}[2n+1] \\\\\n",
                "\\vdots \\\\\n",
                "h_{oi}[4n-1]\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "Once the coefficients $\\beta_m$ are estimated, the poles $\\lambda_k$ can be obtained from the roots $z_k$ of the characteristic polynomial.\n",
                "\n",
                "[^1]: D. Brown, R. Allemang and R. Zimmerman and M. Mergeay. \"Parameter estimation techniques for modal analysis\". SAE Technical Paper 790221, 1979.\n",
                "\n",
                "### LSCF method\n",
                "\n",
                "According to Guillaume et al. [^2], the transfer function between an output $o$ ($o = 1, \\ldots, n_o$)  and an input $i$ ($i = 1, \\ldots, n_i$) can be modeled in the frequency domain as:\n",
                "$$\n",
                "\\widehat{H}_k(\\omega) = \\frac{N_k(\\omega)}{d(\\omega)},\n",
                "$$\n",
                "where $k = 1, \\ldots, n_o n_i$ ($k = (o - 1) n_i + i$). Here, $N_k(\\omega)$ is the $k$-th element of the numerator matrix defined as:\n",
                "$$\n",
                "N_k(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\beta}_k,\n",
                "$$\n",
                "while $d(\\omega)$ is the common denominator polynomial defined as:\n",
                "$$\n",
                "d(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\alpha}.\n",
                "$$\n",
                "\n",
                "In the previous equations, $\\mathbf{\\Omega}(\\omega)$ is the vector of polynomial basis functions defined as:\n",
                "$$\n",
                "\\mathbf{\\Omega}(\\omega)^T = [1, \\Omega_1(\\omega), \\ldots, \\Omega_n(\\omega)] \\text{ with } \\Omega_n(\\omega) = \\exp(-i\\omega n T_s),\n",
                "$$\n",
                "where $n$ is the order of the denominator polynomial (a.k.a the model order) and $T_s$ is the sampling period. The vectors $\\boldsymbol{\\beta}_k$ and $\\boldsymbol{\\alpha}$ contain the coefficients of the numerator and denominator polynomials, respectively.\n",
                "\n",
                "Based on the previous formulation of the FRFs, the LSCF method consists in estimating the coefficients of the numerator $\\boldsymbol{\\beta}_k$ and denominator $\\boldsymbol{\\alpha}$ polynomials by minimizing the following functional:\n",
                "$$\n",
                "J(\\boldsymbol{\\theta}) = \\sum_{k=1}^{n_o n_i} \\sum_{j=1}^{n_f} \\left| W_k(\\omega_j)\\left[H_k(\\omega_j) d(\\omega_j) - N_k(\\omega_j)\\right] \\right|^2,\n",
                "$$\n",
                "where $\\boldsymbol{\\theta} = [\\boldsymbol{\\beta}_1^T, \\ldots, \\boldsymbol{\\beta}_{n_o n_i}^T, \\boldsymbol{\\alpha}^T]^T$ is the vector of unknown parameters to be estimated, $H_k(\\omega_j)$ is the measured FRF at frequency $\\omega_j$, $n_f$ is the number of frequency lines used for the identification and $W_k(\\omega_j)$ is an arbitrary weighting function. In this package, a unitary weighting function is used, i.e. $W_k(\\omega_j) = 1$.\n",
                "\n",
                "The poles of the transfer function are obtained from the roots of the characteristic polynomial associated with the denominator polynomial $d(\\omega)$, which are computed after having estimated the coefficients $\\boldsymbol{\\alpha}$ as the argument of the minimum of the functional $J(\\boldsymbol{\\theta})$ (see Ref. [2] for details).\n",
                "\n",
                "[^2]: P. Guillaume, P. Verboven, S. Vanlanduit, H. Van der Auweraer and B. Peeters, \"A poly-reference implementation of the least-squares complex frequency-domain estimator\". Proceedings of the 21st International Modal Analysis Conference, IMAC, 2003.\n",
                "\n",
                "### pLSCF method\n",
                "\n",
                "The pLSCF method is an extension of the LSCF method that makes it possible to take into account multiple reference sensors simultaneously (see Ref. [2] for details). When using only one reference sensor, the pLSCF method is equivalent to the LSCF method.\n",
                "\n",
                "In this approach, the transfer function $\\widehat{\\mathbf{H}}_o(\\omega) \\in \\mathbb{C}^{1 \\times n_i}$ between an output $o$ ($o = 1, \\ldots, n_o$) and a set of $n_i$ inputs can be modeled in the frequency domain as:\n",
                "$$\n",
                "\\widehat{\\mathbf{H}}_o(\\omega) = \\mathbf{N}_o(\\omega) \\mathbf{D}(\\omega)^{-1},\n",
                "$$\n",
                "where $\\mathbf{N}_o(\\omega) \\in \\mathbb{C}^{1 \\times n_i}$ is the numerator matrix defined as:\n",
                "$$\n",
                "\\mathbf{N}_o(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\beta}_o,\n",
                "$$\n",
                "while $\\mathbf{D}(\\omega) \\in \\mathbb{C}^{n_i \\times n_i}$ is the denominator matrix defined as:\n",
                "$$\n",
                "\\mathbf{D}(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\alpha}.\n",
                "$$\n",
                "\n",
                "Based on the previous formulation of the FRFs, the pLSCF method consists in estimating the coefficients of the numerator $\\boldsymbol{\\beta}_o$ and denominator $\\boldsymbol{\\alpha}$ polynomials. To this end, one defines the weighted error between the measured and modeled FRFs as:\n",
                "$$\n",
                "\\boldsymbol{\\varepsilon}_o(\\omega_j, \\boldsymbol{\\theta}) = W_o(\\omega_j)\\left[\\mathbf{H}_o(\\omega_j) \\mathbf{D}(\\omega_j) - \\mathbf{N}_o(\\omega_j)\\right]\n",
                "$$\n",
                "\n",
                "Then, an error matrix $\\mathbf{E}_o(\\boldsymbol{\\theta}) \\in \\mathbb{C}^{n_f \\times n_i}$ is constructed by stacking the weighted errors $\\boldsymbol{\\varepsilon}_o(\\omega_j, \\boldsymbol{\\theta}) \\in \\mathbb{C}^{1 \\times n_i}$ for all frequency lines, that is:\n",
                "$$\n",
                "\\mathbf{E}_o(\\boldsymbol{\\theta}) = \\begin{bmatrix}\n",
                "\\boldsymbol{\\varepsilon}_o(\\omega_1, \\boldsymbol{\\theta}) \\\\\n",
                "\\vdots \\\\\n",
                "\\boldsymbol{\\varepsilon}_o(\\omega_{n_f}, \\boldsymbol{\\theta})\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "Finally, the coefficients of the numerator and denominator polynomials are estimated by minimizing the following functional:\n",
                "$$\n",
                "J(\\boldsymbol{\\theta}) = \\sum_{o=1}^{n_o} \\Vert\\mathbf{E}_o(\\boldsymbol{\\theta})\\Vert^2.\n",
                "$$\n",
                "\n",
                "The poles of the transfer function are obtained from the characteristic polynomial associated with the denominator matrix $\\mathbf{D}(\\omega)$, by computing the eigenvalues of the so-called companion matrix[^3].\n",
                "\n",
                "[^3]: M. El-Kafafy, P. Guillaume, B. Peeters, F. Marra, G. Coppotelli. \"Advanced Frequency-Domain Modal Analysis for Dealing with Measurement Noise and Parameter Uncertainty\". In: Allemang R., De Clerck J., Niezrecki C., Blough J. (eds) Topics in Modal Analysis I, Volume 5. Conference Proceedings of the Society for Experimental Mechanics Series. 2012.\n",
                "\n",
                "### Stabilization diagram\n",
                "\n",
                "When carrying out an EMA, the main question that arises is how many modes (or, more precisely, poles) are contained within the frequency band of interest. Analyzing the frequency response functions (transfer functions) provides an initial estimate. However, it is difficult to distinguish between multiple or nearby modes.\n",
                "\n",
                "The stabilisation diagram is a fundamental EMA tool as it provides a clear and concise presentation of the poles of the system under study. The idea is to adjust the transfer function model by increasing the number of poles and displaying the results on a graph. Broadly speaking, increasing the order of the model (i.e. the number of poles) causes the true vibration modes to converge to a stable value, whereas the numerical modes appear inconsistently or randomly on the graph. Thus, as the poles converge to stable ones, markers appear on the graph to indicate the identified poles, as the order of the model is gradually increased. The selection of poles is generally based on the stability of natural frequencies, modal damping and/or mode shapes, moving from a model order $n$ to an order $n + 1$. In this package, the stability of the natural frequencies and damping ratios is used to identify the physical poles of the system. The stability criterion is set to 1% for the natural frequencies and 5% for the damping ratios, following common practice in the EMA field.\n",
                "\n",
                "In `StructuralVibration.jl`, the stabilization diagram can be obtained using the `stabilization` function along with any of the Mdof methods described above. The identified stable poles can then be visualized using the `stabilization_plot` function. The `stabilization` function returns an `EMAMdofStabilization` structure that contains all the information related to the stabilization analysis, which allows the user to manually select the appropriate poles and to further analyze (e.g. by using quality and analysis indicators) and visualize the results.\n",
                "\n",
                "## Mode shapes extraction\n",
                "\n",
                "Once the poles of the system have been identified using one of the Mdof methods described above, the residues can be computed to extract the mode shapes. In this package, the residues are computed using a least-squares approach based on the formulation of the FRFs as a sum of rational functions. The FRF between an output $p$ ($p = 1, \\ldots, n_o$) and an input $q$ ($q = 1, \\ldots, n_i$) can be expressed as:\n",
                "$$\n",
                "H_{pq}(\\omega) = \\sum_{i = 1}^n \\left(\\frac{{}_iR_{pq}}{j\\omega - \\lambda_i} + \\frac{{}_iR_{pq}^\\ast}{j\\omega - \\lambda_i^\\ast}\\right),\n",
                "$$\n",
                "where $R_{k, pq}$ is the residue associated with the pole $\\lambda_k$.\n",
                "\n",
                "At a frequency line $\\omega$, the previous equation can be rewritten in matrix form as:\n",
                "$$\n",
                "H_{pq}(\\omega) = \\begin{bmatrix}\n",
                "\\frac{1}{j\\omega - \\lambda_1} & \\ldots & \\frac{1}{j\\omega - \\lambda_n} & \\frac{1}{j\\omega - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega - \\lambda_n^\\ast}\n",
                "\\end{bmatrix}\n",
                "\\begin{bmatrix}\n",
                "{}_1R_{pq} \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq} \\\\\n",
                "{}_1R_{pq}^\\ast \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq}^\\ast\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "Repeating the previous equation for all frequency lines leads to the following system of equations:\n",
                "$$\n",
                "\\begin{bmatrix}\n",
                "H_{pq}(\\omega_1) \\\\\n",
                "H_{pq}(\\omega_2) \\\\\n",
                "\\vdots \\\\\n",
                "H_{pq}(\\omega_{n_f})\n",
                "\\end{bmatrix}\n",
                "= \\begin{bmatrix}\n",
                "\\frac{1}{j\\omega_1 - \\lambda_1} & \\ldots & \\frac{1}{j\\omega_1 - \\lambda_n} & \\frac{1}{j\\omega_1 - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega_1 - \\lambda_n^\\ast} \\\\\n",
                "\\frac{1}{j\\omega_2 - \\lambda_1} & \\ldots & \\frac{1}{j\\omega_2 - \\lambda_n} & \\frac{1}{j\\omega_2 - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega_2 - \\lambda_n^\\ast} \\\\\n",
                "\\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots \\\\\n",
                "\\frac{1}{j\\omega_{n_f} - \\lambda_1} & \\ldots & \\frac{1}{j\\omega_{n_f} - \\lambda_n} & \\frac{1}{j\\omega_{n_f} - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega_{n_f} - \\lambda_n^\\ast}\n",
                "\\end{bmatrix}\n",
                "\\begin{bmatrix}\n",
                "{}_1R_{pq} \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq} \\\\\n",
                "{}_1R_{pq}^\\ast \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq}^\\ast\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "This system of equations can be solved in the least-squares sense to estimate the residues ${}_iR_{pq}$. This procedure is implemented in the `mode_residues` function.\n",
                "\n",
                "From the estimated residues, the mode shapes can be extracted using the following relation:\n",
                "$$\n",
                "{}_iR_{pq} = c_i \\phi_{p,i} \\phi_{q,i},\n",
                "$$\n",
                "where $c_i$ is a scaling factor, $\\phi_{p,i}$ (resp. nd $\\phi_{q,i}$) is the $p$-th (resp. $q$-th) component of the mode shape associated with the $i$-th mode.\n",
                "\n",
                "To solve for the mode shapes, a collocated measurement is required, i.e. $p = q$. Thus, the mode shape components can be obtained as:\n",
                "$$\n",
                "\\phi_{p,i} = \\sqrt{\\frac{{}_iR_{pp}}{c_i}} \\; \\text{ and } \\; \\phi_{q,i} = \\frac{{}_iR_{pq}}{\\sqrt{c_i\\; {}_iR_{pp}}}.\n",
                "$$\n",
                "\n",
                "Here, the scaling factors $c_i$ can be computed based on a normalization criterion. In this package, the scaling factors are computed such that the modal mass of each mode shape is equal to one (mass normalization). The mode shapes can then be extracted using the `modeshape_extraction` function.\n",
                "\n",
                "## API\n",
                "\n",
                "**Data types**\n",
                "\n",
                "::: {.api}\n",
                "**EMAMdofProblem**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "4",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc EMAMdofProblem"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mEMAMdofProblem(frf, freq; frange, type_frf)\u001b[39m\n\n  Data structure defining the inputs for EMA-MDOF modal extraction methods.\n\n  \u001b[1mConstructor parameters\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mfrf::Array{Complex, 3}\u001b[39m: 3D FRF matrix (array nm x ne x nf)\n    \u001b[34m• \u001b[39m \u001b[36mfreq::AbstractArray{Real}\u001b[39m: Vector of frequency values (Hz)\n    \u001b[34m• \u001b[39m \u001b[36mfrange::Vector{Real}\u001b[39m: Frequency range for analysis (default:\n       [freq[1], freq[end]])\n    \u001b[34m• \u001b[39m \u001b[36mtype_frf::Symbol\u001b[39m: Type of FRF used in the analysis\n       \n       \u001b[34m• \u001b[39m \u001b[36m:dis\u001b[39m: Admittance (default)\n       \u001b[34m• \u001b[39m \u001b[36m:vel\u001b[39m: Mobility\n       \u001b[34m• \u001b[39m \u001b[36m:acc\u001b[39m: Accelerance\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mfrf::Array{Complex, 3}\u001b[39m: 3D admittance matrix (array nm x ne x nf)\n    \u001b[34m• \u001b[39m \u001b[36mfreq::AbstractArray{Real}\u001b[39m: Vector of frequency values (Hz)\n    \u001b[34m• \u001b[39m \u001b[36mtype_frf::Symbol\u001b[39m: Type of FRF used in the analysis\n\n  \u001b[1mNote\u001b[22m The FRF is internally converted to admittance if needed.",
                        "text/markdown": "```julia\nEMAMdofProblem(frf, freq; frange, type_frf)\n```\n\nData structure defining the inputs for EMA-MDOF modal extraction methods.\n\n**Constructor parameters**\n\n  * `frf::Array{Complex, 3}`: 3D FRF matrix (array nm x ne x nf)\n  * `freq::AbstractArray{Real}`: Vector of frequency values (Hz)\n  * `frange::Vector{Real}`: Frequency range for analysis (default: [freq[1], freq[end]])\n  * `type_frf::Symbol`: Type of FRF used in the analysis\n\n      * `:dis`: Admittance (default)\n      * `:vel`: Mobility\n      * `:acc`: Accelerance\n\n**Fields**\n\n  * `frf::Array{Complex, 3}`: 3D admittance matrix (array nm x ne x nf)\n  * `freq::AbstractArray{Real}`: Vector of frequency values (Hz)\n  * `type_frf::Symbol`: Type of FRF used in the analysis\n\n**Note** The FRF is internally converted to admittance if needed.\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">EMAMdofProblem&#40;frf, freq; frange, type_frf&#41;</code></pre>\n<p>Data structure defining the inputs for EMA-MDOF modal extraction methods.</p>\n<p><strong>Constructor parameters</strong></p>\n<ul>\n<li><p><code>frf::Array&#123;Complex, 3&#125;</code>: 3D FRF matrix &#40;array nm x ne x nf&#41;</p>\n</li>\n<li><p><code>freq::AbstractArray&#123;Real&#125;</code>: Vector of frequency values &#40;Hz&#41;</p>\n</li>\n<li><p><code>frange::Vector&#123;Real&#125;</code>: Frequency range for analysis &#40;default: &#91;freq&#91;1&#93;, freq&#91;end&#93;&#93;&#41;</p>\n</li>\n<li><p><code>type_frf::Symbol</code>: Type of FRF used in the analysis</p>\n<ul>\n<li><p><code>:dis</code>: Admittance &#40;default&#41;</p>\n</li>\n<li><p><code>:vel</code>: Mobility</p>\n</li>\n<li><p><code>:acc</code>: Accelerance</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>frf::Array&#123;Complex, 3&#125;</code>: 3D admittance matrix &#40;array nm x ne x nf&#41;</p>\n</li>\n<li><p><code>freq::AbstractArray&#123;Real&#125;</code>: Vector of frequency values &#40;Hz&#41;</p>\n</li>\n<li><p><code>type_frf::Symbol</code>: Type of FRF used in the analysis</p>\n</li>\n</ul>\n<p><strong>Note</strong> The FRF is internally converted to admittance if needed.</p>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nEMAMdofProblem(frf, freq; frange, type_frf)\n\\end{verbatim}\nData structure defining the inputs for EMA-MDOF modal extraction methods.\n\n\\textbf{Constructor parameters}\n\n\\begin{itemize}\n\\item \\texttt{frf::Array\\{Complex, 3\\}}: 3D FRF matrix (array nm x ne x nf)\n\n\n\\item \\texttt{freq::AbstractArray\\{Real\\}}: Vector of frequency values (Hz)\n\n\n\\item \\texttt{frange::Vector\\{Real\\}}: Frequency range for analysis (default: [freq[1], freq[end]])\n\n\n\\item \\texttt{type\\_frf::Symbol}: Type of FRF used in the analysis\n\n\\begin{itemize}\n\\item \\texttt{:dis}: Admittance (default)\n\n\n\\item \\texttt{:vel}: Mobility\n\n\n\\item \\texttt{:acc}: Accelerance\n\n\\end{itemize}\n\\end{itemize}\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{frf::Array\\{Complex, 3\\}}: 3D admittance matrix (array nm x ne x nf)\n\n\n\\item \\texttt{freq::AbstractArray\\{Real\\}}: Vector of frequency values (Hz)\n\n\n\\item \\texttt{type\\_frf::Symbol}: Type of FRF used in the analysis\n\n\\end{itemize}\n\\textbf{Note} The FRF is internally converted to admittance if needed.\n\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "5",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**AutoEMAMdofProblem**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "6",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc AutoEMAMdofProblem"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mAutoEMAMdofProblem(prob, dpi, method; modetype)\u001b[39m\n\n  Structure containing the input data for automatic experimental modal\n  analysis using Mdof methods\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36morder::Int\u001b[39m: Model order (number of poles to extract)\n    \u001b[34m• \u001b[39m \u001b[36mdpi::Vector{Int}\u001b[39m: Driving point indices - default = [1, 1]\n       \n       \u001b[34m• \u001b[39m \u001b[36mdpi[1]\u001b[39m: Driving point index on the measurement mesh\n       \u001b[34m• \u001b[39m \u001b[36mdpi[2]\u001b[39m: Driving point index on the excitation mesh\n    \u001b[34m• \u001b[39m \u001b[36mmethod::MdofModalExtraction\u001b[39m: Method to extract the poles\n       \n       \u001b[34m• \u001b[39m \u001b[36mLSCE\u001b[39m: Least Squares Complex Exponential method\n       \u001b[34m• \u001b[39m \u001b[36mLSCF\u001b[39m`: Least Squares Complex Frequency method (default)\n       \u001b[34m• \u001b[39m \u001b[36mPLSCF\u001b[39m: Polyreference Least Squares Complex Frequency\n       method\n    \u001b[34m• \u001b[39m \u001b[36mmodetype::Symbol\u001b[39m: Type of mode shapes to extract\n       \n       \u001b[34m• \u001b[39m \u001b[36m:real\u001b[39m: Real mode shapes (default)\n       \u001b[34m• \u001b[39m \u001b[36m:complex\u001b[39m: Complex mode shapes",
                        "text/markdown": "```julia\nAutoEMAMdofProblem(prob, dpi, method; modetype)\n```\n\nStructure containing the input data for automatic experimental modal analysis using Mdof methods\n\n**Fields**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `order::Int`: Model order (number of poles to extract)\n  * `dpi::Vector{Int}`: Driving point indices - default = [1, 1]\n\n      * `dpi[1]`: Driving point index on the measurement mesh\n      * `dpi[2]`: Driving point index on the excitation mesh\n  * `method::MdofModalExtraction`: Method to extract the poles\n\n      * `LSCE`: Least Squares Complex Exponential method\n      * `LSCF``: Least Squares Complex Frequency method (default)\n      * `PLSCF`: Polyreference Least Squares Complex Frequency method\n  * `modetype::Symbol`: Type of mode shapes to extract\n\n      * `:real`: Real mode shapes (default)\n      * `:complex`: Complex mode shapes\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">AutoEMAMdofProblem&#40;prob, dpi, method; modetype&#41;</code></pre>\n<p>Structure containing the input data for automatic experimental modal analysis using Mdof methods</p>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>order::Int</code>: Model order &#40;number of poles to extract&#41;</p>\n</li>\n<li><p><code>dpi::Vector&#123;Int&#125;</code>: Driving point indices - default &#61; &#91;1, 1&#93;</p>\n<ul>\n<li><p><code>dpi&#91;1&#93;</code>: Driving point index on the measurement mesh</p>\n</li>\n<li><p><code>dpi&#91;2&#93;</code>: Driving point index on the excitation mesh</p>\n</li>\n</ul>\n</li>\n<li><p><code>method::MdofModalExtraction</code>: Method to extract the poles</p>\n<ul>\n<li><p><code>LSCE</code>: Least Squares Complex Exponential method</p>\n</li>\n<li><p><code>LSCF</code>&#96;: Least Squares Complex Frequency method &#40;default&#41;</p>\n</li>\n<li><p><code>PLSCF</code>: Polyreference Least Squares Complex Frequency method</p>\n</li>\n</ul>\n</li>\n<li><p><code>modetype::Symbol</code>: Type of mode shapes to extract</p>\n<ul>\n<li><p><code>:real</code>: Real mode shapes &#40;default&#41;</p>\n</li>\n<li><p><code>:complex</code>: Complex mode shapes</p>\n</li>\n</ul>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nAutoEMAMdofProblem(prob, dpi, method; modetype)\n\\end{verbatim}\nStructure containing the input data for automatic experimental modal analysis using Mdof methods\n\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{order::Int}: Model order (number of poles to extract)\n\n\n\\item \\texttt{dpi::Vector\\{Int\\}}: Driving point indices - default = [1, 1]\n\n\\begin{itemize}\n\\item \\texttt{dpi[1]}: Driving point index on the measurement mesh\n\n\n\\item \\texttt{dpi[2]}: Driving point index on the excitation mesh\n\n\\end{itemize}\n\n\\item \\texttt{method::MdofModalExtraction}: Method to extract the poles\n\n\\begin{itemize}\n\\item \\texttt{LSCE}: Least Squares Complex Exponential method\n\n\n\\item \\texttt{LSCF}`: Least Squares Complex Frequency method (default)\n\n\n\\item \\texttt{PLSCF}: Polyreference Least Squares Complex Frequency method\n\n\\end{itemize}\n\n\\item \\texttt{modetype::Symbol}: Type of mode shapes to extract\n\n\\begin{itemize}\n\\item \\texttt{:real}: Real mode shapes (default)\n\n\n\\item \\texttt{:complex}: Complex mode shapes\n\n\\end{itemize}\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "7",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**EMAMdofSolution**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "8",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc EMAMdofSolution"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mEMAMdofSolution(poles, ms, ci, res, lr, ur)\u001b[39m\n\n  Structure containing the solution of the automatic experimental modal\n  analysis using Mdof methods\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mpoles::Vector{Complex}\u001b[39m: Extracted poles\n    \u001b[34m• \u001b[39m \u001b[36mms::AbstractArray{Real}\u001b[39m: Mode shapes\n    \u001b[34m• \u001b[39m \u001b[36mci::Vector{Complex}\u001b[39m: Scaling constants for each mode\n    \u001b[34m• \u001b[39m \u001b[36mres::AbstractArray{Complex}\u001b[39m: Residues for each mode\n    \u001b[34m• \u001b[39m \u001b[36mlr::Matrix{Complex}\u001b[39m: Lower residual\n    \u001b[34m• \u001b[39m \u001b[36mur::Matrix{Complex}\u001b[39m: Upper residual",
                        "text/markdown": "```julia\nEMAMdofSolution(poles, ms, ci, res, lr, ur)\n```\n\nStructure containing the solution of the automatic experimental modal analysis using Mdof methods\n\n**Fields**\n\n  * `poles::Vector{Complex}`: Extracted poles\n  * `ms::AbstractArray{Real}`: Mode shapes\n  * `ci::Vector{Complex}`: Scaling constants for each mode\n  * `res::AbstractArray{Complex}`: Residues for each mode\n  * `lr::Matrix{Complex}`: Lower residual\n  * `ur::Matrix{Complex}`: Upper residual\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">EMAMdofSolution&#40;poles, ms, ci, res, lr, ur&#41;</code></pre>\n<p>Structure containing the solution of the automatic experimental modal analysis using Mdof methods</p>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>poles::Vector&#123;Complex&#125;</code>: Extracted poles</p>\n</li>\n<li><p><code>ms::AbstractArray&#123;Real&#125;</code>: Mode shapes</p>\n</li>\n<li><p><code>ci::Vector&#123;Complex&#125;</code>: Scaling constants for each mode</p>\n</li>\n<li><p><code>res::AbstractArray&#123;Complex&#125;</code>: Residues for each mode</p>\n</li>\n<li><p><code>lr::Matrix&#123;Complex&#125;</code>: Lower residual</p>\n</li>\n<li><p><code>ur::Matrix&#123;Complex&#125;</code>: Upper residual</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nEMAMdofSolution(poles, ms, ci, res, lr, ur)\n\\end{verbatim}\nStructure containing the solution of the automatic experimental modal analysis using Mdof methods\n\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{poles::Vector\\{Complex\\}}: Extracted poles\n\n\n\\item \\texttt{ms::AbstractArray\\{Real\\}}: Mode shapes\n\n\n\\item \\texttt{ci::Vector\\{Complex\\}}: Scaling constants for each mode\n\n\n\\item \\texttt{res::AbstractArray\\{Complex\\}}: Residues for each mode\n\n\n\\item \\texttt{lr::Matrix\\{Complex\\}}: Lower residual\n\n\n\\item \\texttt{ur::Matrix\\{Complex\\}}: Upper residual\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "9",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**EMAMdofStabilization**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "10",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc EMAMdofStabilization"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mEMAMdofStabilization(prob, poles, modefn, mode_stabfn, mode_stabdr)\u001b[39m\n\n  Data structure summarizing the results of the stabilization analysis.\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36mfrange::Vector{Real}\u001b[39m: Frequency range used for the stabilization\n       analysis\n    \u001b[34m• \u001b[39m \u001b[36mpoles::Vector{Vector{Complex}}\u001b[39m: Vector of vectors containing\n       extracted poles at each model order\n    \u001b[34m• \u001b[39m \u001b[36mmodefn::Matrix{Real}\u001b[39m: Matrix containing the natural frequencies\n       (useful for plotting)\n    \u001b[34m• \u001b[39m \u001b[36mmode_stabfn::Matrix{Bool}\u001b[39m: Matrix indicating the stability of\n       natural frequencies\n    \u001b[34m• \u001b[39m \u001b[36mmode_stabdr::Matrix{Bool}\u001b[39m: Matrix indicating the stability of\n       damping ratios\n\n  \u001b[1mNote\u001b[22m\n\n  This structure is returned by the \u001b[36mstabilization\u001b[39m function after performing a\n  stabilization diagram analysis and used by \u001b[36mstabilization_plot\u001b[39m for\n  visualization.",
                        "text/markdown": "```julia\nEMAMdofStabilization(prob, poles, modefn, mode_stabfn, mode_stabdr)\n```\n\nData structure summarizing the results of the stabilization analysis.\n\n**Fields**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `frange::Vector{Real}`: Frequency range used for the stabilization analysis\n  * `poles::Vector{Vector{Complex}}`: Vector of vectors containing extracted poles at each model order\n  * `modefn::Matrix{Real}`: Matrix containing the natural frequencies (useful for plotting)\n  * `mode_stabfn::Matrix{Bool}`: Matrix indicating the stability of natural frequencies\n  * `mode_stabdr::Matrix{Bool}`: Matrix indicating the stability of damping ratios\n\n**Note**\n\nThis structure is returned by the `stabilization` function after performing a stabilization diagram analysis and used by `stabilization_plot` for visualization.\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">EMAMdofStabilization&#40;prob, poles, modefn, mode_stabfn, mode_stabdr&#41;</code></pre>\n<p>Data structure summarizing the results of the stabilization analysis.</p>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>frange::Vector&#123;Real&#125;</code>: Frequency range used for the stabilization analysis</p>\n</li>\n<li><p><code>poles::Vector&#123;Vector&#123;Complex&#125;&#125;</code>: Vector of vectors containing extracted poles at each model order</p>\n</li>\n<li><p><code>modefn::Matrix&#123;Real&#125;</code>: Matrix containing the natural frequencies &#40;useful for plotting&#41;</p>\n</li>\n<li><p><code>mode_stabfn::Matrix&#123;Bool&#125;</code>: Matrix indicating the stability of natural frequencies</p>\n</li>\n<li><p><code>mode_stabdr::Matrix&#123;Bool&#125;</code>: Matrix indicating the stability of damping ratios</p>\n</li>\n</ul>\n<p><strong>Note</strong></p>\n<p>This structure is returned by the <code>stabilization</code> function after performing a stabilization diagram analysis and used by <code>stabilization_plot</code> for visualization.</p>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nEMAMdofStabilization(prob, poles, modefn, mode_stabfn, mode_stabdr)\n\\end{verbatim}\nData structure summarizing the results of the stabilization analysis.\n\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{frange::Vector\\{Real\\}}: Frequency range used for the stabilization analysis\n\n\n\\item \\texttt{poles::Vector\\{Vector\\{Complex\\}\\}}: Vector of vectors containing extracted poles at each model order\n\n\n\\item \\texttt{modefn::Matrix\\{Real\\}}: Matrix containing the natural frequencies (useful for plotting)\n\n\n\\item \\texttt{mode\\_stabfn::Matrix\\{Bool\\}}: Matrix indicating the stability of natural frequencies\n\n\n\\item \\texttt{mode\\_stabdr::Matrix\\{Bool\\}}: Matrix indicating the stability of damping ratios\n\n\\end{itemize}\n\\textbf{Note}\n\nThis structure is returned by the \\texttt{stabilization} function after performing a stabilization diagram analysis and used by \\texttt{stabilization\\_plot} for visualization.\n\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "11",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "**Related functions**\n",
                "\n",
                "::: {.api}\n",
                "**poles_extraction**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "12",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc poles_extraction(::EMAMdofProblem, ::Int, ::LSCE)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mpoles_extraction(prob, order, method; stabdiag, weighting)\u001b[39m\n\n  Extract complex poles from Frequency Response Function (FRF) data using the\n  specified modal extraction method.\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36morder::Int\u001b[39m: Model order (number of poles to extract)\n    \u001b[34m• \u001b[39m \u001b[36mmethod::MdofModalExtraction\u001b[39m: Modal extraction method\n       \n       \u001b[34m• \u001b[39m \u001b[36mLSCE\u001b[39m: Least Squares Complex Exponential method\n       \u001b[34m• \u001b[39m \u001b[36mLSCF\u001b[39m: Least Squares Complex Frequency method (default)\n       \u001b[34m• \u001b[39m \u001b[36mPLSCF\u001b[39m: Polyreference Least Squares Complex Frequency\n       method\n    \u001b[34m• \u001b[39m \u001b[36mstabdiag\u001b[39m: Boolean to indicate the function is used to build a\n       stability diagram (default: false)\n    \u001b[34m• \u001b[39m \u001b[36mweighting\u001b[39m: Boolean to indicate whether to apply weighting of the\n       FRF (default: true)\n\n  \u001b[1mOutput\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Vector of extracted complex poles\n\n  \u001b[1mNote\u001b[22m\n\n  The \u001b[36mweighting\u001b[39m parameter is only applicable for the LSCF and PLSCF methods.",
                        "text/markdown": "```julia\npoles_extraction(prob, order, method; stabdiag, weighting)\n```\n\nExtract complex poles from Frequency Response Function (FRF) data using the specified modal extraction method.\n\n**Inputs**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `order::Int`: Model order (number of poles to extract)\n  * `method::MdofModalExtraction`: Modal extraction method\n\n      * `LSCE`: Least Squares Complex Exponential method\n      * `LSCF`: Least Squares Complex Frequency method (default)\n      * `PLSCF`: Polyreference Least Squares Complex Frequency method\n  * `stabdiag`: Boolean to indicate the function is used to build a stability diagram (default: false)\n  * `weighting`: Boolean to indicate whether to apply weighting of the FRF (default: true)\n\n**Output**\n\n  * `poles`: Vector of extracted complex poles\n\n**Note**\n\nThe `weighting` parameter is only applicable for the LSCF and PLSCF methods.\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">poles_extraction&#40;prob, order, method; stabdiag, weighting&#41;</code></pre>\n<p>Extract complex poles from Frequency Response Function &#40;FRF&#41; data using the specified modal extraction method.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>order::Int</code>: Model order &#40;number of poles to extract&#41;</p>\n</li>\n<li><p><code>method::MdofModalExtraction</code>: Modal extraction method</p>\n<ul>\n<li><p><code>LSCE</code>: Least Squares Complex Exponential method</p>\n</li>\n<li><p><code>LSCF</code>: Least Squares Complex Frequency method &#40;default&#41;</p>\n</li>\n<li><p><code>PLSCF</code>: Polyreference Least Squares Complex Frequency method</p>\n</li>\n</ul>\n</li>\n<li><p><code>stabdiag</code>: Boolean to indicate the function is used to build a stability diagram &#40;default: false&#41;</p>\n</li>\n<li><p><code>weighting</code>: Boolean to indicate whether to apply weighting of the FRF &#40;default: true&#41;</p>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>poles</code>: Vector of extracted complex poles</p>\n</li>\n</ul>\n<p><strong>Note</strong></p>\n<p>The <code>weighting</code> parameter is only applicable for the LSCF and PLSCF methods.</p>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\npoles_extraction(prob, order, method; stabdiag, weighting)\n\\end{verbatim}\nExtract complex poles from Frequency Response Function (FRF) data using the specified modal extraction method.\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{order::Int}: Model order (number of poles to extract)\n\n\n\\item \\texttt{method::MdofModalExtraction}: Modal extraction method\n\n\\begin{itemize}\n\\item \\texttt{LSCE}: Least Squares Complex Exponential method\n\n\n\\item \\texttt{LSCF}: Least Squares Complex Frequency method (default)\n\n\n\\item \\texttt{PLSCF}: Polyreference Least Squares Complex Frequency method\n\n\\end{itemize}\n\n\\item \\texttt{stabdiag}: Boolean to indicate the function is used to build a stability diagram (default: false)\n\n\n\\item \\texttt{weighting}: Boolean to indicate whether to apply weighting of the FRF (default: true)\n\n\\end{itemize}\n\\textbf{Output}\n\n\\begin{itemize}\n\\item \\texttt{poles}: Vector of extracted complex poles\n\n\\end{itemize}\n\\textbf{Note}\n\nThe \\texttt{weighting} parameter is only applicable for the LSCF and PLSCF methods.\n\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "13",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**stabilization**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "14",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc stabilization(::EMAMdofProblem)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mstabilization(prob, max_order, method; weighting, stabcrit)\u001b[39m\n\n  Perform stabilization diagram analysis using the specified modal extraction\n  method (LSCE, LSCF, or PLSCF).\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36mmax_order::Int\u001b[39m: Maximum model order for the stabilization analysis\n    \u001b[34m• \u001b[39m \u001b[36mmethod\u001b[39m: Modal extraction method to use\n       \n       \u001b[34m• \u001b[39m \u001b[36mLSCE()\u001b[39m: Least Squares Complex Exponential method\n       \u001b[34m• \u001b[39m \u001b[36mLSCF()\u001b[39m: Least Squares Complex Frequency method (default)\n       \u001b[34m• \u001b[39m \u001b[36mPLSCF()\u001b[39m: Polyreference Least Squares Complex Frequency\n       method\n    \u001b[34m• \u001b[39m \u001b[36mfrange\u001b[39m: Frequency range for analysis (default: [freq[1],\n       freq[end]])\n    \u001b[34m• \u001b[39m \u001b[36mweighting\u001b[39m: Boolean to indicate if the weighting based on the\n       variance of each FRF is applied (default: true)\n    \u001b[34m• \u001b[39m \u001b[36mstabcrit\u001b[39m: Vector containing the stability criteria for natural\n       frequencies and damping ratios (default: [0.01, 0.05])\n\n  \u001b[1mOutput\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36msol::EMAMdofStabilization\u001b[39m: Data structure containing the results\n       of the stabilization analysis",
                        "text/markdown": "```julia\nstabilization(prob, max_order, method; weighting, stabcrit)\n```\n\nPerform stabilization diagram analysis using the specified modal extraction method (LSCE, LSCF, or PLSCF).\n\n**Inputs**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `max_order::Int`: Maximum model order for the stabilization analysis\n  * `method`: Modal extraction method to use\n\n      * `LSCE()`: Least Squares Complex Exponential method\n      * `LSCF()`: Least Squares Complex Frequency method (default)\n      * `PLSCF()`: Polyreference Least Squares Complex Frequency method\n  * `frange`: Frequency range for analysis (default: [freq[1], freq[end]])\n  * `weighting`: Boolean to indicate if the weighting based on the variance of each FRF is applied (default: true)\n  * `stabcrit`: Vector containing the stability criteria for natural frequencies and damping ratios (default: [0.01, 0.05])\n\n**Output**\n\n  * `sol::EMAMdofStabilization`: Data structure containing the results of the stabilization analysis\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">stabilization&#40;prob, max_order, method; weighting, stabcrit&#41;</code></pre>\n<p>Perform stabilization diagram analysis using the specified modal extraction method &#40;LSCE, LSCF, or PLSCF&#41;.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>max_order::Int</code>: Maximum model order for the stabilization analysis</p>\n</li>\n<li><p><code>method</code>: Modal extraction method to use</p>\n<ul>\n<li><p><code>LSCE&#40;&#41;</code>: Least Squares Complex Exponential method</p>\n</li>\n<li><p><code>LSCF&#40;&#41;</code>: Least Squares Complex Frequency method &#40;default&#41;</p>\n</li>\n<li><p><code>PLSCF&#40;&#41;</code>: Polyreference Least Squares Complex Frequency method</p>\n</li>\n</ul>\n</li>\n<li><p><code>frange</code>: Frequency range for analysis &#40;default: &#91;freq&#91;1&#93;, freq&#91;end&#93;&#93;&#41;</p>\n</li>\n<li><p><code>weighting</code>: Boolean to indicate if the weighting based on the variance of each FRF is applied &#40;default: true&#41;</p>\n</li>\n<li><p><code>stabcrit</code>: Vector containing the stability criteria for natural frequencies and damping ratios &#40;default: &#91;0.01, 0.05&#93;&#41;</p>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>sol::EMAMdofStabilization</code>: Data structure containing the results of the stabilization analysis</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nstabilization(prob, max_order, method; weighting, stabcrit)\n\\end{verbatim}\nPerform stabilization diagram analysis using the specified modal extraction method (LSCE, LSCF, or PLSCF).\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{max\\_order::Int}: Maximum model order for the stabilization analysis\n\n\n\\item \\texttt{method}: Modal extraction method to use\n\n\\begin{itemize}\n\\item \\texttt{LSCE()}: Least Squares Complex Exponential method\n\n\n\\item \\texttt{LSCF()}: Least Squares Complex Frequency method (default)\n\n\n\\item \\texttt{PLSCF()}: Polyreference Least Squares Complex Frequency method\n\n\\end{itemize}\n\n\\item \\texttt{frange}: Frequency range for analysis (default: [freq[1], freq[end]])\n\n\n\\item \\texttt{weighting}: Boolean to indicate if the weighting based on the variance of each FRF is applied (default: true)\n\n\n\\item \\texttt{stabcrit}: Vector containing the stability criteria for natural frequencies and damping ratios (default: [0.01, 0.05])\n\n\\end{itemize}\n\\textbf{Output}\n\n\\begin{itemize}\n\\item \\texttt{sol::EMAMdofStabilization}: Data structure containing the results of the stabilization analysis\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "15",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**stabilization_plot**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "16",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc stabilization_plot(::EMAMdofStabilization)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mstabilization_plot(stab::EMAMdofStabilization, indicator)\u001b[39m\n\n  Plot stabilization diagram for EMA-MDOF pole stability analysis.\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mstab\u001b[39m: EMA-MDOF stabilization data\n    \u001b[34m• \u001b[39m \u001b[36mindicator\u001b[39m: Indicator to plot\n       \n       \u001b[34m• \u001b[39m \u001b[36m:psif\u001b[39m : Power spectrum indicator function (default)\n       \u001b[34m• \u001b[39m \u001b[36m:cmif\u001b[39m : Complex mode indicator function\n\n  \u001b[1mOutput\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mfig\u001b[39m: Figure",
                        "text/markdown": "```julia\nstabilization_plot(stab::EMAMdofStabilization, indicator)\n```\n\nPlot stabilization diagram for EMA-MDOF pole stability analysis.\n\n**Inputs**\n\n  * `stab`: EMA-MDOF stabilization data\n  * `indicator`: Indicator to plot\n\n      * `:psif` : Power spectrum indicator function (default)\n      * `:cmif` : Complex mode indicator function\n\n**Output**\n\n  * `fig`: Figure\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">stabilization_plot&#40;stab::EMAMdofStabilization, indicator&#41;</code></pre>\n<p>Plot stabilization diagram for EMA-MDOF pole stability analysis.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>stab</code>: EMA-MDOF stabilization data</p>\n</li>\n<li><p><code>indicator</code>: Indicator to plot</p>\n<ul>\n<li><p><code>:psif</code> : Power spectrum indicator function &#40;default&#41;</p>\n</li>\n<li><p><code>:cmif</code> : Complex mode indicator function</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>fig</code>: Figure</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nstabilization_plot(stab::EMAMdofStabilization, indicator)\n\\end{verbatim}\nPlot stabilization diagram for EMA-MDOF pole stability analysis.\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{stab}: EMA-MDOF stabilization data\n\n\n\\item \\texttt{indicator}: Indicator to plot\n\n\\begin{itemize}\n\\item \\texttt{:psif} : Power spectrum indicator function (default)\n\n\n\\item \\texttt{:cmif} : Complex mode indicator function\n\n\\end{itemize}\n\\end{itemize}\n\\textbf{Output}\n\n\\begin{itemize}\n\\item \\texttt{fig}: Figure\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "17",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**mode_residues**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "18",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc mode_residues(::EMAMdofProblem, ::Vector{T}) where {T <: Complex}"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mmode_residues(prob, poles)\u001b[39m\n\n  Compute residues of a frequency response function (FRF) given its poles.\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob\u001b[39m: EMAMdofProblem containing FRF data and frequency vector\n    \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Vector of complex poles\n\n  \u001b[1mOutput\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mres\u001b[39m: Residues corresponding to each pole",
                        "text/markdown": "```julia\nmode_residues(prob, poles)\n```\n\nCompute residues of a frequency response function (FRF) given its poles.\n\n**Inputs**\n\n  * `prob`: EMAMdofProblem containing FRF data and frequency vector\n  * `poles`: Vector of complex poles\n\n**Output**\n\n  * `res`: Residues corresponding to each pole\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">mode_residues&#40;prob, poles&#41;</code></pre>\n<p>Compute residues of a frequency response function &#40;FRF&#41; given its poles.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob</code>: EMAMdofProblem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>poles</code>: Vector of complex poles</p>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>res</code>: Residues corresponding to each pole</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nmode_residues(prob, poles)\n\\end{verbatim}\nCompute residues of a frequency response function (FRF) given its poles.\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob}: EMAMdofProblem containing FRF data and frequency vector\n\n\n\\item \\texttt{poles}: Vector of complex poles\n\n\\end{itemize}\n\\textbf{Output}\n\n\\begin{itemize}\n\\item \\texttt{res}: Residues corresponding to each pole\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "19",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**modeshape_extraction**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "20",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc modeshape_extraction(::Array{T, 3}, ::Vector{T}, ::Vector{Int}) where {T <: Complex}"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mmodeshape_extraction(residues, poles, dpi; type = :complex)\u001b[39m\n\n  Extract mode shapes using MDOF approximation\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mresidues\u001b[39m: Residues matrix of size (np, nm, ne)\n    \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Vector of complex poles\n    \u001b[34m• \u001b[39m \u001b[36mdpi\u001b[39m: Driving point indices - default = [1, 1]\n       \n       \u001b[34m• \u001b[39m \u001b[36mdpi[1]\u001b[39m: Driving point index on the measurement mesh\n       \u001b[34m• \u001b[39m \u001b[36mdpi[2]\u001b[39m: Driving point index on the excitation mesh\n    \u001b[34m• \u001b[39m \u001b[36mtype\u001b[39m: Type of mode shape\n       \n       \u001b[34m• \u001b[39m \u001b[36m:complex\u001b[39m: Complex mode shapes (default)\n       \u001b[34m• \u001b[39m \u001b[36m:real\u001b[39m: Real mode shapes\n\n  \u001b[1mOutputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mms\u001b[39m: Mode shapes matrix\n    \u001b[34m• \u001b[39m \u001b[36mci\u001b[39m: Scaling factors vector",
                        "text/markdown": "```julia\nmodeshape_extraction(residues, poles, dpi; type = :complex)\n```\n\nExtract mode shapes using MDOF approximation\n\n**Inputs**\n\n  * `residues`: Residues matrix of size (np, nm, ne)\n  * `poles`: Vector of complex poles\n  * `dpi`: Driving point indices - default = [1, 1]\n\n      * `dpi[1]`: Driving point index on the measurement mesh\n      * `dpi[2]`: Driving point index on the excitation mesh\n  * `type`: Type of mode shape\n\n      * `:complex`: Complex mode shapes (default)\n      * `:real`: Real mode shapes\n\n**Outputs**\n\n  * `ms`: Mode shapes matrix\n  * `ci`: Scaling factors vector\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">modeshape_extraction&#40;residues, poles, dpi; type &#61; :complex&#41;</code></pre>\n<p>Extract mode shapes using MDOF approximation</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>residues</code>: Residues matrix of size &#40;np, nm, ne&#41;</p>\n</li>\n<li><p><code>poles</code>: Vector of complex poles</p>\n</li>\n<li><p><code>dpi</code>: Driving point indices - default &#61; &#91;1, 1&#93;</p>\n<ul>\n<li><p><code>dpi&#91;1&#93;</code>: Driving point index on the measurement mesh</p>\n</li>\n<li><p><code>dpi&#91;2&#93;</code>: Driving point index on the excitation mesh</p>\n</li>\n</ul>\n</li>\n<li><p><code>type</code>: Type of mode shape</p>\n<ul>\n<li><p><code>:complex</code>: Complex mode shapes &#40;default&#41;</p>\n</li>\n<li><p><code>:real</code>: Real mode shapes</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Outputs</strong></p>\n<ul>\n<li><p><code>ms</code>: Mode shapes matrix</p>\n</li>\n<li><p><code>ci</code>: Scaling factors vector</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nmodeshape_extraction(residues, poles, dpi; type = :complex)\n\\end{verbatim}\nExtract mode shapes using MDOF approximation\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{residues}: Residues matrix of size (np, nm, ne)\n\n\n\\item \\texttt{poles}: Vector of complex poles\n\n\n\\item \\texttt{dpi}: Driving point indices - default = [1, 1]\n\n\\begin{itemize}\n\\item \\texttt{dpi[1]}: Driving point index on the measurement mesh\n\n\n\\item \\texttt{dpi[2]}: Driving point index on the excitation mesh\n\n\\end{itemize}\n\n\\item \\texttt{type}: Type of mode shape\n\n\\begin{itemize}\n\\item \\texttt{:complex}: Complex mode shapes (default)\n\n\n\\item \\texttt{:real}: Real mode shapes\n\n\\end{itemize}\n\\end{itemize}\n\\textbf{Outputs}\n\n\\begin{itemize}\n\\item \\texttt{ms}: Mode shapes matrix\n\n\n\\item \\texttt{ci}: Scaling factors vector\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "21",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**solve**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "22",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc solve(::AutoEMAMdofProblem)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36msolve(prob::AutoEMAMdofProblem)\u001b[39m\n\n  Solve automatically experimental modal analysis problem using Mdof methods\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob\u001b[39m: Structure containing the input data for automatic\n       experimental modal analysis using Mdof methods\n\n  \u001b[1mOutputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36msol::EMAMdofSolution\u001b[39m: Structure containing the solution of the\n       automatic experimental modal analysis using Mdof methods",
                        "text/markdown": "```julia\nsolve(prob::AutoEMAMdofProblem)\n```\n\nSolve automatically experimental modal analysis problem using Mdof methods\n\n**Inputs**\n\n  * `prob`: Structure containing the input data for automatic experimental modal analysis using Mdof methods\n\n**Outputs**\n\n  * `sol::EMAMdofSolution`: Structure containing the solution of the automatic experimental modal analysis using Mdof methods\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">solve&#40;prob::AutoEMAMdofProblem&#41;</code></pre>\n<p>Solve automatically experimental modal analysis problem using Mdof methods</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob</code>: Structure containing the input data for automatic experimental modal analysis using Mdof methods</p>\n</li>\n</ul>\n<p><strong>Outputs</strong></p>\n<ul>\n<li><p><code>sol::EMAMdofSolution</code>: Structure containing the solution of the automatic experimental modal analysis using Mdof methods</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nsolve(prob::AutoEMAMdofProblem)\n\\end{verbatim}\nSolve automatically experimental modal analysis problem using Mdof methods\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob}: Structure containing the input data for automatic experimental modal analysis using Mdof methods\n\n\\end{itemize}\n\\textbf{Outputs}\n\n\\begin{itemize}\n\\item \\texttt{sol::EMAMdofSolution}: Structure containing the solution of the automatic experimental modal analysis using Mdof methods\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "23",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "## Example\n",
                "\n",
                "### Data preparation and FRF calculation"
            ]
        },
        {
            "id": "24",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| output: false\n",
                "# Structure parameters of the beam\n",
                "L = 1.        # Length\n",
                "b = 0.03      # Width\n",
                "h = 0.01      # Thickness\n",
                "S = b*h       # Cross-section area\n",
                "Iz = b*h^3/12 # Moment of inertia\n",
                "\n",
                "# Material parameters\n",
                "E = 2.1e11  # Young's modulus\n",
                "ρ = 7850.   # Density\n",
                "ξ = 0.01    # Damping ratio\n",
                "\n",
                "# Mesh\n",
                "xexc = 0:0.05:L\n",
                "xm = xexc[2]\n",
                "\n",
                "# Mode calculation - Simply supported boundary conditions\n",
                "beam = Beam(L, S, Iz, E, ρ)\n",
                "fmax = 500.\n",
                "\n",
                "ωn, kn = modefreq(beam, 2fmax)\n",
                "ϕexc = modeshape(beam, kn, xexc)\n",
                "ϕm = modeshape(beam, kn, xm)\n",
                "\n",
                "# FRF calculation\n",
                "freq = 1.:0.1:fmax\n",
                "prob = ModalFRFProblem(ωn, ξ, freq, ϕm, ϕexc)\n",
                "H = solve(prob; ismat = true).u"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "1×21×4991 Array{ComplexF64, 3}:\n[:, :, 1] =\n 0.0+0.0im  1.39556e-6-8.82659e-10im  …  6.11271e-22-6.07576e-25im\n\n[:, :, 2] =\n 0.0+0.0im  1.39594e-6-9.71617e-10im  …  6.11554e-22-6.68872e-25im\n\n[:, :, 3] =\n 0.0+0.0im  1.39634e-6-1.06077e-9im  …  6.11865e-22-7.30322e-25im\n\n;;; … \n\n[:, :, 4989] =\n 0.0+0.0im  4.40444e-8-1.02645e-8im  …  1.155e-22-3.85415e-24im\n\n[:, :, 4990] =\n 0.0+0.0im  4.42484e-8-1.02773e-8im  …  1.15553e-22-3.87119e-24im\n\n[:, :, 4991] =\n 0.0+0.0im  4.44526e-8-1.02902e-8im  …  1.15606e-22-3.88827e-24im"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "25",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "### Poles extraction"
            ]
        },
        {
            "id": "26",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "# EMA-MDOF problem\n",
                "prob_mdof = EMAMdofProblem(H, freq)\n",
                "\n",
                "# Poles extraction\n",
                "order = 10 # Model order\n",
                "p_lsce = poles_extraction(prob_mdof, order, LSCE())\n",
                "p_lscf = poles_extraction(prob_mdof, order, LSCF())\n",
                "p_plscf = poles_extraction(prob_mdof, order, PLSCF())\n",
                "\n",
                "# Stabilization diagram analysis using the LSCE method\n",
                "stab = stabilization(prob_mdof, order, LSCE())\n",
                "\n",
                "# Visualization of the stabilization diagram\n",
                "stabilization_plot(stab)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "image/png": "",
                        "text/html": "<img width=600 height=450 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>"
                    },
                    "metadata": {
                        "image/png": {
                            "width": 600,
                            "height": 450
                        }
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "27",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        },
        {
            "id": "28",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "# Natural frequencies and damping ratios\n",
                "\n",
                "fn_lsce, dr_lsce = poles2modal(p_lsce)\n",
                "fn_lscf, dr_lscf = poles2modal(p_lscf)\n",
                "fn_plscf, dr_plscf = poles2modal(p_plscf)\n",
                "\n",
                "fig_f = Figure()\n",
                "ax_f1 = Axis(fig_f[1, 1], title = \"Natural frequencies\", xlabel = \"Mode ID\", ylabel = \"Natural frequency [Hz]\")\n",
                "ax_f2 = Axis(fig_f[1, 2], title = \"Damping ratios\", xlabel = \"Mode ID\", ylabel = \"Damping ratio  (%)\")\n",
                "\n",
                "scatter!(ax_f1, 1:4, ωn[1:4]/2π, marker = :rect, markersize = 25, label = \"Reference\")\n",
                "scatter!(ax_f1, 1:4, fn_lsce, markersize = 20, label = \"LSCE\")\n",
                "scatter!(ax_f1, 1:4, fn_lscf, marker = :star4, markersize = 15, label = \"LSCF\")\n",
                "scatter!(ax_f1, 1:4, fn_plscf, marker = :circle, markersize = 10, label = \"PLSCF\")\n",
                "axislegend(ax_f1, position = :lt)\n",
                "\n",
                "scatter!(ax_f2, 1:4, 100ξ*ones(4), marker = :rect, markersize = 25, label = \"Reference\")\n",
                "scatter!(ax_f2, 1:4, 100dr_lsce, markersize = 20, label = \"LSCE\")\n",
                "scatter!(ax_f2, 1:4, 100dr_lscf, marker = :star4, markersize = 15, label = \"LSCF\")\n",
                "scatter!(ax_f2, 1:4, 100dr_plscf, marker = :circle, markersize = 10, label = \"PLSCF\")\n",
                "\n",
                "display(fig_f);"
            ],
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "image/png": "",
                        "text/html": "<img width=600 height=450 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, 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nZsxZswYRERERO5GBi4yYMAAateuzc3q2rUrVqsVERERkbuNgYt069aNAu+++y61atXinnvuobDPPvsMs9lMz549adGiBSIiIiJ3IwM3mDFjBseOHeOdd97h6aefpsCePXswDIOePXsiIiIicrcycJM333yTMWPGsH//fv7+979jsVgQERERKQkM3KRFixZ8//33dOvWjS5durB8+XJERERESgIDN4qMjGT79u3ExsbSrFkzGjRoQPXq1RERERG5mxm4ma+vL6tWrWLs2LG88cYbTJw4EREREZG7mYEb/Pjjj1itVgqYzWZef/11OnfuTEhICCIiIiJ3MwMX2bt3L+fPn+dGvLy8EBEREbmbGbhIfHw869at40YmTpzIpEmTEBG5Ffn5+WzYsIEvv/ySAwcOcP78efz9/alcuTJt2rSha9euBAQEICJSHAxc5LPPPsNut1Pgn//8J6NHj2bv3r0U5uHhgYjIrVi9ejXjx4/HZrNRvXp1WrVqRaVKlUhKSuLo0aO8++67xMfHM3jwYAYPHoy3tzciIn8lAxfx8vKiMC8vL0wmE76+voiIuEqnTp2oVKkSK1euJCoqimtJTU1l0aJFtG3blqVLl1K1alVERP4qBiIid5CPP/4YPz8/biQwMJBRo0YxfPhwsrOzERH5KxmIiNxB/Pz8uJojR44wZcoUUlNTee655+jcuTNOFosFHx8fRET+SgYiIne4rKws2rdvz8CBA6lcuTLPPvssa9asITo6GhGR4mDgIq+++irff/89Bc6dO0diYiJdunShsN69e9O7d29ERP6MzMxMvL29KezgwYPYbDbi4+Nx+u6779i4cSPR0dGIiBQHAxcJCQmhQoUKFKhQoQKNGjWiKH9/f0RE/qyRI0ditVoZN24cISEhOFWqVInExES++uorIiIi2LhxI3//+98RESkuBi7y/PPPIyLibnPnzmXp0qW0adOGJ554gqFDhxIUFMQHH3zAM888w+XLl3nhhRfo3LkzIiLFxcBFxo4dS+fOnWnZsiU3Y+HChXh7e9OnTx9ERG6W2Wymb9++PPbYY8ydO5d77rmHl156iX79+tGlSxdERG4HBi6yf/9+LBYLqamp3IxNmzZRv359RET+DC8vL0aNGkX//v2ZNm0aTZo0YeLEiTz00EOIiBQ3AxcpV64cy5cvZ/ny5dysNm3aICLyR61d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\"/>"
                    },
                    "metadata": {
                        "image/png": {
                            "width": 600,
                            "height": 450
                        }
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "29",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "### Mode shapes extraction"
            ]
        },
        {
            "id": "30",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| output: false\n",
                "\n",
                "# Driving point indices\n",
                "dpi = [1, 2]\n",
                "\n",
                "# Computation of the mode residues\n",
                "res = mode_residues(prob_mdof, p_lsce)\n",
                "\n",
                "# Extraction of the mode shapes\n",
                "ϕ_est = modeshape_extraction(res, p_lsce, dpi, type = :real)[1]\n",
                "\n",
                "# Convert to real mode shapes\n",
                "ϕ_est_real = c2r_modeshape(ϕ_est)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "21×4 Matrix{Float64}:\n 0.0           0.0           0.0           0.0\n 0.144215      0.284777      0.418807      0.540188\n 0.284884      0.541678      0.745973      0.874762\n 0.418547      0.745555      0.910054      0.876184\n 0.54191       0.87645       0.875447      0.54355\n 0.651927      0.921548      0.650045      0.00319133\n 0.745886      0.876433      0.28329      -0.539106\n 0.82147       0.745519     -0.144792     -0.876313\n 0.876822      0.541621     -0.541074     -0.879191\n 0.910584      0.284701     -0.819501     -0.545953\n ⋮                                        \n 0.876818     -0.541773     -0.541292      0.879694\n 0.821462     -0.745643     -0.144812      0.881935\n 0.745873     -0.876533      0.283529      0.546807\n 0.651914     -0.921633      0.650397      0.00230393\n 0.541899     -0.876526      0.875672     -0.54329\n 0.418542     -0.745624      0.910011     -0.881158\n 0.284884     -0.541732      0.745734     -0.881942\n 0.144216     -0.284808      0.418592     -0.545292\n 1.12899e-16  -2.25742e-16   3.38778e-16  -4.545e-16"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "31",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        },
        {
            "id": "32",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "# Mode shapes\n",
                "fig_mode = Figure()\n",
                "ax_mode1 = Axis(fig_mode[1, 1], title = \"Mode shape 1\", ylabel = \"Value\")\n",
                "ax_mode2 = Axis(fig_mode[1, 2], title = \"Mode shape 2\")\n",
                "ax_mode3 = Axis(fig_mode[2, 1], title = \"Mode shape 3\", xlabel = \"Position [m]\", ylabel = \"Value\")\n",
                "ax_mode4 = Axis(fig_mode[2, 2], title = \"Mode shape 4\", xlabel = \"Position [m]\")\n",
                "\n",
                "lines!(ax_mode1, xexc, ϕexc[:, 1], label = \"Reference\")\n",
                "lines!(ax_mode1, xexc, ϕ_est_real[:, 1], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode1, 0, L)\n",
                "axislegend(ax_mode1, position = :cb)\n",
                "\n",
                "lines!(ax_mode2, xexc, ϕexc[:, 2], label = \"Reference\")\n",
                "lines!(ax_mode2, xexc, ϕ_est_real[:, 2], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode2, 0, L)\n",
                "\n",
                "lines!(ax_mode3, xexc, ϕexc[:, 3], label = \"Reference\")\n",
                "lines!(ax_mode3, xexc, ϕ_est_real[:, 3], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode3, 0, L)\n",
                "\n",
                "lines!(ax_mode4, xexc, ϕexc[:, 4], label = \"Reference\")\n",
                "lines!(ax_mode4, xexc, ϕ_est_real[:, 4], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode4, 0, L)\n",
                "\n",
                "display(fig_mode);"
            ],
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "image/png": "",
                        "text/html": "<img width=600 height=450 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>"
                    },
                    "metadata": {
                        "image/png": {
                            "width": 600,
                            "height": 450
                        }
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "33",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "### Automatic EMA-MDOF"
            ]
        },
        {
            "id": "34",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| output: false\n",
                "prob_ema = AutoEMAMdofProblem(prob_mdof, order, dpi, LSCE())\n",
                "sol_ema = solve(prob_ema)\n",
                "fn_ema, ξn_ema = poles2modal(sol_ema.poles)\n",
                "ϕn_ema = sol_ema.ms"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "21×4 Matrix{Float64}:\n 0.0           0.0           0.0           0.0\n 0.144215      0.284777      0.418807      0.540188\n 0.284884      0.541678      0.745973      0.874762\n 0.418547      0.745555      0.910054      0.876184\n 0.54191       0.87645       0.875447      0.54355\n 0.651927      0.921548      0.650045      0.00319133\n 0.745886      0.876433      0.28329      -0.539106\n 0.82147       0.745519     -0.144792     -0.876313\n 0.876822      0.541621     -0.541074     -0.879191\n 0.910584      0.284701     -0.819501     -0.545953\n ⋮                                        \n 0.876818     -0.541773     -0.541292      0.879694\n 0.821462     -0.745643     -0.144812      0.881935\n 0.745873     -0.876533      0.283529      0.546807\n 0.651914     -0.921633      0.650397      0.00230393\n 0.541899     -0.876526      0.875672     -0.54329\n 0.418542     -0.745624      0.910011     -0.881158\n 0.284884     -0.541732      0.745734     -0.881942\n 0.144216     -0.284808      0.418592     -0.545292\n 1.12899e-16  -2.25742e-16   3.38778e-16  -4.545e-16"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "35",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        }
    ],
    "timestamp": "2025-10-23T15:39:24.358",
    "file": "/Users/maucejo/Documents/01_Recherche/04_Projets/Codes/Julia/StructuralVibration/docs/modal_extraction/mdof_methods.qmd",
    "qnr_schema_version": "1.0.0"
}