{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "title: Mdof methods\n",
                "format:\n",
                "  html:\n",
                "    toc: true\n",
                "    number-sections: true\n",
                "engine: julia\n",
                "execute:\n",
                "  freeze: auto\n",
                "  cache: true\n",
                "---"
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "#| output: false\n",
                "using StructuralVibration, ShareAdd\n",
                "@usingany CairoMakie"
            ],
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": "\u001b[32m\u001b[1mPrecompiling\u001b[22m\u001b[39m packages...\n   1578.8 ms\u001b[32m  ✓ \u001b[39mStructuralVibration\n  1 dependency successfully precompiled in 2 seconds. 134 already precompiled.\n\u001b[91m\u001b[1m┌ \u001b[22m\u001b[39m\u001b[91m\u001b[1mError: \u001b[22m\u001b[39mError during loading of extension QuartoNotebookWorkerMakieExt of QuartoNotebookWorker, use `Base.retry_load_extensions()` to retry.\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m  exception =\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m1-element ExceptionStack:\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   InitError: MethodError: no method matching isless(::Nothing, ::VersionNumber)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   The function `isless` exists, but no method is defined for this combination of argument types.\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0mClosest candidates are:\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  isless(\u001b[91m::VersionNumber\u001b[39m, ::VersionNumber)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m\u001b[90m   @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m\u001b[4mversion.jl:201\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  isless(\u001b[91m::Missing\u001b[39m, ::Any)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m\u001b[90m   @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m\u001b[4mmissing.jl:87\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  isless(::Any, \u001b[91m::Missing\u001b[39m)\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m\u001b[90m   @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m\u001b[4mmissing.jl:88\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[0m  ...\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   Stacktrace:\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [1] \u001b[0m\u001b[1m<\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mx\u001b[39m::\u001b[0mNothing, \u001b[90my\u001b[39m::\u001b[0mVersionNumber\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4moperators.jl:399\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [2] \u001b[0m\u001b[1mconfigure\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[36mQuartoNotebookWorkerMakieExt\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/ext/\u001b[39m\u001b[90m\u001b[4mQuartoNotebookWorkerMakieExt.jl:22\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [3] \u001b[0m\u001b[1m__init__\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[36mQuartoNotebookWorkerMakieExt\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/ext/\u001b[39m\u001b[90m\u001b[4mQuartoNotebookWorkerMakieExt.jl:32\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [4] \u001b[0m\u001b[1mrun_module_init\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mmod\u001b[39m::\u001b[0mModule, \u001b[90mi\u001b[39m::\u001b[0mInt64\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1415\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [5] \u001b[0m\u001b[1mregister_restored_modules\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90msv\u001b[39m::\u001b[0mCore.SimpleVector, \u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90mpath\u001b[39m::\u001b[0mString\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1403\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [6] \u001b[0m\u001b[1m_include_from_serialized\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90mpath\u001b[39m::\u001b[0mString, \u001b[90mocachepath\u001b[39m::\u001b[0mString, \u001b[90mdepmods\u001b[39m::\u001b[0mVector\u001b[90m{Any}\u001b[39m; \u001b[90mregister\u001b[39m::\u001b[0mBool\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1291\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [7] \u001b[0m\u001b[1m_include_from_serialized\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1246\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [8] \u001b[0m\u001b[1m_require_search_from_serialized\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90msourcepath\u001b[39m::\u001b[0mString, \u001b[90mbuild_id\u001b[39m::\u001b[0mUInt128, \u001b[90mstalecheck\u001b[39m::\u001b[0mBool; \u001b[90mreasons\u001b[39m::\u001b[0mDict\u001b[90m{String, Int64}\u001b[39m, \u001b[90mDEPOT_PATH\u001b[39m::\u001b[0mVector\u001b[90m{String}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2087\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m     [9] \u001b[0m\u001b[1m__require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mNothing\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2599\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [10] \u001b[0m\u001b[1m_require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90muuidkey\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mNothing\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2465\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [11] \u001b[0m\u001b[1m_require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90muuidkey\u001b[39m::\u001b[0mBase.PkgId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2459\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [12] \u001b[0m\u001b[1mrun_extension_callbacks\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mextid\u001b[39m::\u001b[0mBase.ExtensionId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1579\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [13] \u001b[0m\u001b[1mrun_extension_callbacks\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkgid\u001b[39m::\u001b[0mBase.PkgId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1616\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [14] \u001b[0m\u001b[1mrun_package_callbacks\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mmodkey\u001b[39m::\u001b[0mBase.PkgId\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1432\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [15] \u001b[0m\u001b[1m_require_search_from_serialized\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90msourcepath\u001b[39m::\u001b[0mString, \u001b[90mbuild_id\u001b[39m::\u001b[0mUInt128, \u001b[90mstalecheck\u001b[39m::\u001b[0mBool; \u001b[90mreasons\u001b[39m::\u001b[0mDict\u001b[90m{String, Int64}\u001b[39m, \u001b[90mDEPOT_PATH\u001b[39m::\u001b[0mVector\u001b[90m{String}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2106\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [16] \u001b[0m\u001b[1m_require_search_from_serialized\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:1981\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [17] \u001b[0m\u001b[1m__require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mpkg\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mString\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2599\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [18] \u001b[0m\u001b[1m_require_prelocked\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90muuidkey\u001b[39m::\u001b[0mBase.PkgId, \u001b[90menv\u001b[39m::\u001b[0mString\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2465\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [19] \u001b[0m\u001b[1mmacro expansion\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2393\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [20] \u001b[0m\u001b[1mmacro expansion\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mlock.jl:376\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [21] \u001b[0m\u001b[1m__require\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90minto\u001b[39m::\u001b[0mModule, \u001b[90mmod\u001b[39m::\u001b[0mSymbol\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2358\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [22] \u001b[0m\u001b[1mrequire\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90minto\u001b[39m::\u001b[0mModule, \u001b[90mmod\u001b[39m::\u001b[0mSymbol\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mloading.jl:2334\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [23] top-level scope\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/Documents/01_Recherche/04_Projets/Codes/Julia/StructuralVibration/docs/modal_extraction/\u001b[39m\u001b[90m\u001b[4mmdof_methods.qmd:17\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [24] \u001b[0m\u001b[1meval\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mm\u001b[39m::\u001b[0mModule, \u001b[90me\u001b[39m::\u001b[0mAny\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mCore\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mboot.jl:489\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [25] \u001b[0m\u001b[1m(::QuartoNotebookWorker.var\"#21#22\"{Module, Expr})\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:222\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [26] \u001b[0m\u001b[1m(::QuartoNotebookWorker.Packages.IOCapture.var\"#12#13\"{Type{InterruptException}, QuartoNotebookWorker.var\"#21#22\"{Module, Expr}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}})\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker.Packages.IOCapture\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/vendor/IOCapture/src/\u001b[39m\u001b[90m\u001b[4mIOCapture.jl:170\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [27] \u001b[0m\u001b[1mwith_logstate\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mQuartoNotebookWorker.Packages.IOCapture.var\"#12#13\"\u001b[90m{Type{InterruptException}, QuartoNotebookWorker.var\"#21#22\"{Module, Expr}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}}\u001b[39m, \u001b[90mlogstate\u001b[39m::\u001b[0mBase.CoreLogging.LogState\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase.CoreLogging\u001b[39m \u001b[90m./logging/\u001b[39m\u001b[90m\u001b[4mlogging.jl:540\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [28] \u001b[0m\u001b[1mwith_logger\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mFunction, \u001b[90mlogger\u001b[39m::\u001b[0mBase.CoreLogging.ConsoleLogger\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase.CoreLogging\u001b[39m \u001b[90m./logging/\u001b[39m\u001b[90m\u001b[4mlogging.jl:651\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [29] \u001b[0m\u001b[1mcapture\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mQuartoNotebookWorker.var\"#21#22\"\u001b[90m{Module, Expr}\u001b[39m; \u001b[90mrethrow\u001b[39m::\u001b[0mType, \u001b[90mcolor\u001b[39m::\u001b[0mBool, \u001b[90mpassthrough\u001b[39m::\u001b[0mBool, \u001b[90mcapture_buffer\u001b[39m::\u001b[0mIOBuffer, \u001b[90mio_context\u001b[39m::\u001b[0mVector\u001b[90m{Pair{Symbol, Any}}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker.Packages.IOCapture\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/vendor/IOCapture/src/\u001b[39m\u001b[90m\u001b[4mIOCapture.jl:167\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [30] \u001b[0m\u001b[1mcapture\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:248\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [31] \u001b[0m\u001b[1mio_capture\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mFunction; \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m, \u001b[90mkws\u001b[39m::\u001b[0m@Kwargs\u001b[90m{rethrow::DataType, color::Bool, io_context::Vector{Pair{Symbol, Any}}}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:250\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [32] \u001b[0m\u001b[1mio_capture\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:246\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [33] \u001b[0m\u001b[1minclude_str\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mmod\u001b[39m::\u001b[0mModule, \u001b[90mcode\u001b[39m::\u001b[0mString; \u001b[90mfile\u001b[39m::\u001b[0mString, \u001b[90mline\u001b[39m::\u001b[0mInt64, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:201\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [34] \u001b[0m\u001b[1m#invokelatest_gr#232\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mreflection.jl:1282\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [35] \u001b[0m\u001b[1minvokelatest_gr\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mreflection.jl:1274\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [36] \u001b[0m\u001b[1m#7\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:18\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [37] \u001b[0m\u001b[1mwith_inline_display\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mf\u001b[39m::\u001b[0mQuartoNotebookWorker.var\"#7#8\"\u001b[90m{String, String, Int64, Dict{Any, Any}}\u001b[39m, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mInlineDisplay.jl:31\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [38] \u001b[0m\u001b[1m_render_thunk\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mthunk\u001b[39m::\u001b[0mFunction, \u001b[90mcode\u001b[39m::\u001b[0mString, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m, \u001b[90mis_expansion_ref\u001b[39m::\u001b[0mBase.RefValue\u001b[90m{Bool}\u001b[39m; \u001b[90minline\u001b[39m::\u001b[0mBool\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:43\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [39] \u001b[0m\u001b[1m_render_thunk\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:35\u001b[24m\u001b[39m\u001b[90m [inlined]\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [40] \u001b[0m\u001b[1mrender\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mcode\u001b[39m::\u001b[0mString, \u001b[90mfile\u001b[39m::\u001b[0mString, \u001b[90mline\u001b[39m::\u001b[0mInt64, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m; \u001b[90minline\u001b[39m::\u001b[0mBool\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:15\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [41] \u001b[0m\u001b[1mrender\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mcode\u001b[39m::\u001b[0mString, \u001b[90mfile\u001b[39m::\u001b[0mString, \u001b[90mline\u001b[39m::\u001b[0mInt64, \u001b[90mcell_options\u001b[39m::\u001b[0mDict\u001b[90m{Any, Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[32mQuartoNotebookWorker\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/QuartoNotebookWorker/src/\u001b[39m\u001b[90m\u001b[4mrender.jl:1\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [42] \u001b[0m\u001b[1mrender\u001b[22m\u001b[0m\u001b[1m(\u001b[22m::\u001b[0mString, ::\u001b[0mVararg\u001b[90m{Any}\u001b[39m; \u001b[90mkwargs\u001b[39m::\u001b[0m@Kwargs\u001b[90m{}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[33mMain\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/\u001b[39m\u001b[90m\u001b[4mstartup.jl:145\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [43] top-level scope\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90m\u001b[4mnone:1\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [44] \u001b[0m\u001b[1meval\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mm\u001b[39m::\u001b[0mModule, \u001b[90me\u001b[39m::\u001b[0mAny\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mCore\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mboot.jl:489\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [45] \u001b[0m\u001b[1m(::Main.var\"#22#23\")\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[90mchan\u001b[39m::\u001b[0mChannel\u001b[90m{Any}\u001b[39m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[33mMain\u001b[39m \u001b[90m~/.julia/packages/QuartoNotebookRunner/7xf1K/src/\u001b[39m\u001b[90m\u001b[4mstartup.jl:158\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m    [46] \u001b[0m\u001b[1m(::Base.var\"#562#563\"{Main.var\"#22#23\", Channel{Any}})\u001b[22m\u001b[0m\u001b[1m(\u001b[22m\u001b[0m\u001b[1m)\u001b[22m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   \u001b[90m    @\u001b[39m \u001b[90mBase\u001b[39m \u001b[90m./\u001b[39m\u001b[90m\u001b[4mchannels.jl:141\u001b[24m\u001b[39m\n\u001b[91m\u001b[1m│ \u001b[22m\u001b[39m   during initialization of module QuartoNotebookWorkerMakieExt\n\u001b[91m\u001b[1m└ \u001b[22m\u001b[39m\u001b[90m@ Base loading.jl:1589\u001b[39m\n\u001b[32m\u001b[1mPrecompiling\u001b[22m\u001b[39m packages...\n   3223.3 ms\u001b[32m  ✓ \u001b[39mSVMakieExt\u001b[90m (serial)\u001b[39m\n  1 dependency successfully precompiled in 3 seconds\n"
                }
            ],
            "execution_count": 1
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "The Mdof methods are based on the assumption that the system can be represented as a multiple degree of freedom system. They are generally based on the construction of a high-order polynomial matrix whose coefficients are estimated from the measured FRFs. As for the SDOF methods, the estimation of the modal parameters is divided into two steps:\n",
                "\n",
                "1. estimation of the poles of the system to extract the natural frequencies and modal damping ratios,\n",
                "2. estimation of the residues to extract the mode shapes.\n",
                "\n",
                "\n",
                "## Natural frequencies and damping ratios extraction\n",
                "The poles of the system are then obtained as the roots of the characteristic polynomial associated with this polynomial matrix. Three methods are implemented in this package:\n",
                "\n",
                "* the Least-Squares Complex Exponential (LSCE) method,\n",
                "* the Least-Squares Complex Frequency-domain (LSCF) method.\n",
                "* the Polyreference Least-Squares Complex Frequency-domain (pLSCF) method,\n",
                "\n",
                "\n",
                "### LSCE method\n",
                "\n",
                "The LSCE method is based on the assumption that the system can be modeled as a sum of complex exponentials in the time domain. The impulse response function (IRF) between an output $o$ ($o = 1, \\ldots, n_o$) and an input $i$ ($i = 1, \\ldots, n_i$) can be modeled as:\n",
                "$$\n",
                "h_{oi}(t) = \\sum_{k = 1}^n \\left(c_k e^{\\lambda_k t} + c_k^\\ast e^{-\\lambda_k^\\ast t}\\right) = 2 Re\\left(\\sum_{k = 1}^n c_k e^{\\lambda_k t}\\right).\n",
                "$$\n",
                "\n",
                "When sampling the IRF at a sampling period $T_s$, one obtains the following discrete-time model:\n",
                "$$\n",
                "h_{oi}[m] = 2 Re\\left(\\sum_{k = 1}^n c_k z_k^m\\right) \\text{ with } z_k = e^{\\lambda_k T_s},\n",
                "$$\n",
                "for $m = 0, 1, \\ldots, 2n$, ($n$ is the model order). According to the Prony's method, the poles $\\lambda_k$ can be calculated from the roots of the following characteristic polynomial:\n",
                "$$\n",
                "\\sum_{m = 0}^{2n} \\beta_m z_k^m = 0 \\text{ with } \\beta_{2n} = 1.\n",
                "$$\n",
                "\n",
                "The coefficients $\\beta_l$ of the characteristic polynomial can be estimated from the sampled IRF $h_{oi}[m]$. Todo so, one first multiply $h_{oi}[m]$ by the corresponding coefficients $\\beta_m$ and then sums the resulting equations for $m = 0, 1, \\ldots, 2n$. This leads to the following homogeneous set of equations:\n",
                "$$\n",
                "\\sum_{m = 0}^{2n} \\beta_m h_{oi}[m] = 2 Re\\left(\\sum_{k = 1}^{n} c_k \\sum_{m = 0}^{2n} \\beta_m z_k^m\\right).\n",
                "$$\n",
                "\n",
                "When $z_k$ is a root of the characteristic polynomial, the right-hand side of the previous equation is equal to zero. Therefore, one can estimate the coefficients $\\beta_m$ by solving the following set of linear equations:\n",
                "$$\n",
                "\\sum_{m = 0}^{2n} \\beta_m h_{oi}[m] = 0.\n",
                "$$\n",
                "\n",
                "The previous equation can be derived using different set of data points, $h_{oi}[m]$, $h_{oi}[m+1]$, $\\ldots$, $h_{oi}[m + 2n]$  to obtain an overdetermined set of linear equations that can be solved in the least-squares sense[^1]. In this package, the coefficients $\\beta_m$ are estimated by solving the following set of equations:\n",
                "$$\n",
                "\\begin{bmatrix}\n",
                "h_{oi}[0] & h_{oi}[1] & \\ldots & h_{oi}[2n-1] \\\\\n",
                "h_{oi}[1] & h_{oi}[2] & \\ldots & h_{oi}[2n] \\\\\n",
                "\\vdots & \\vdots & \\ddots & \\vdots \\\\\n",
                "h_{oi}[2n-1] & h_{oi}[2n] & \\ldots & h_{oi}[4n-2]\n",
                "\\end{bmatrix}\n",
                "\\begin{bmatrix}\n",
                "\\beta_0 \\\\\n",
                "\\beta_1 \\\\\n",
                "\\vdots \\\\\n",
                "\\beta_{2n-1}\n",
                "\\end{bmatrix}\n",
                "= -\\begin{bmatrix}\n",
                "h_{oi}[2n] \\\\\n",
                "h_{oi}[2n+1] \\\\\n",
                "\\vdots \\\\\n",
                "h_{oi}[4n-1]\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "Once the coefficients $\\beta_m$ are estimated, the poles $\\lambda_k$ can be obtained from the roots $z_k$ of the characteristic polynomial.\n",
                "\n",
                "[^1]: D. Brown, R. Allemang and R. Zimmerman and M. Mergeay. \"Parameter estimation techniques for modal analysis\". SAE Technical Paper 790221, 1979.\n",
                "\n",
                "### LSCF method\n",
                "\n",
                "According to Guillaume et al. [^2], the transfer function between an output $o$ ($o = 1, \\ldots, n_o$)  and an input $i$ ($i = 1, \\ldots, n_i$) can be modeled in the frequency domain as:\n",
                "$$\n",
                "\\widehat{H}_k(\\omega) = \\frac{N_k(\\omega)}{d(\\omega)},\n",
                "$$\n",
                "where $k = 1, \\ldots, n_o n_i$ ($k = (o - 1) n_i + i$). Here, $N_k(\\omega)$ is the $k$-th element of the numerator matrix defined as:\n",
                "$$\n",
                "N_k(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\beta}_k,\n",
                "$$\n",
                "while $d(\\omega)$ is the common denominator polynomial defined as:\n",
                "$$\n",
                "d(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\alpha}.\n",
                "$$\n",
                "\n",
                "In the previous equations, $\\mathbf{\\Omega}(\\omega)$ is the vector of polynomial basis functions defined as:\n",
                "$$\n",
                "\\mathbf{\\Omega}(\\omega)^T = [1, \\Omega_1(\\omega), \\ldots, \\Omega_n(\\omega)] \\text{ with } \\Omega_n(\\omega) = \\exp(-i\\omega n T_s),\n",
                "$$\n",
                "where $n$ is the order of the denominator polynomial (a.k.a the model order) and $T_s$ is the sampling period. The vectors $\\boldsymbol{\\beta}_k$ and $\\boldsymbol{\\alpha}$ contain the coefficients of the numerator and denominator polynomials, respectively.\n",
                "\n",
                "Based on the previous formulation of the FRFs, the LSCF method consists in estimating the coefficients of the numerator $\\boldsymbol{\\beta}_k$ and denominator $\\boldsymbol{\\alpha}$ polynomials by minimizing the following functional:\n",
                "$$\n",
                "J(\\boldsymbol{\\theta}) = \\sum_{k=1}^{n_o n_i} \\sum_{j=1}^{n_f} \\left| W_k(\\omega_j)\\left[H_k(\\omega_j) d(\\omega_j) - N_k(\\omega_j)\\right] \\right|^2,\n",
                "$$\n",
                "where $\\boldsymbol{\\theta} = [\\boldsymbol{\\beta}_1^T, \\ldots, \\boldsymbol{\\beta}_{n_o n_i}^T, \\boldsymbol{\\alpha}^T]^T$ is the vector of unknown parameters to be estimated, $H_k(\\omega_j)$ is the measured FRF at frequency $\\omega_j$, $n_f$ is the number of frequency lines used for the identification and $W_k(\\omega_j)$ is an arbitrary weighting function. In this package, a unitary weighting function is used, i.e. $W_k(\\omega_j) = 1$.\n",
                "\n",
                "The poles of the transfer function are obtained from the roots of the characteristic polynomial associated with the denominator polynomial $d(\\omega)$, which are computed after having estimated the coefficients $\\boldsymbol{\\alpha}$ as the argument of the minimum of the functional $J(\\boldsymbol{\\theta})$ (see Ref. [2] for details).\n",
                "\n",
                "[^2]: P. Guillaume, P. Verboven, S. Vanlanduit, H. Van der Auweraer and B. Peeters, \"A poly-reference implementation of the least-squares complex frequency-domain estimator\". Proceedings of the 21st International Modal Analysis Conference, IMAC, 2003.\n",
                "\n",
                "### pLSCF method\n",
                "\n",
                "The pLSCF method is an extension of the LSCF method that makes it possible to take into account multiple reference sensors simultaneously (see Ref. [2] for details). When using only one reference sensor, the pLSCF method is equivalent to the LSCF method.\n",
                "\n",
                "In this approach, the transfer function $\\widehat{\\mathbf{H}}_o(\\omega) \\in \\mathbb{C}^{1 \\times n_i}$ between an output $o$ ($o = 1, \\ldots, n_o$) and a set of $n_i$ inputs can be modeled in the frequency domain as:\n",
                "$$\n",
                "\\widehat{\\mathbf{H}}_o(\\omega) = \\mathbf{N}_o(\\omega) \\mathbf{D}(\\omega)^{-1},\n",
                "$$\n",
                "where $\\mathbf{N}_o(\\omega) \\in \\mathbb{C}^{1 \\times n_i}$ is the numerator matrix defined as:\n",
                "$$\n",
                "\\mathbf{N}_o(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\beta}_o,\n",
                "$$\n",
                "while $\\mathbf{D}(\\omega) \\in \\mathbb{C}^{n_i \\times n_i}$ is the denominator matrix defined as:\n",
                "$$\n",
                "\\mathbf{D}(\\omega) = \\mathbf{\\Omega}(\\omega)^T \\boldsymbol{\\alpha}.\n",
                "$$\n",
                "\n",
                "Based on the previous formulation of the FRFs, the pLSCF method consists in estimating the coefficients of the numerator $\\boldsymbol{\\beta}_o$ and denominator $\\boldsymbol{\\alpha}$ polynomials. To this end, one defines the weighted error between the measured and modeled FRFs as:\n",
                "$$\n",
                "\\boldsymbol{\\varepsilon}_o(\\omega_j, \\boldsymbol{\\theta}) = W_o(\\omega_j)\\left[\\mathbf{H}_o(\\omega_j) \\mathbf{D}(\\omega_j) - \\mathbf{N}_o(\\omega_j)\\right]\n",
                "$$\n",
                "\n",
                "Then, an error matrix $\\mathbf{E}_o(\\boldsymbol{\\theta}) \\in \\mathbb{C}^{n_f \\times n_i}$ is constructed by stacking the weighted errors $\\boldsymbol{\\varepsilon}_o(\\omega_j, \\boldsymbol{\\theta}) \\in \\mathbb{C}^{1 \\times n_i}$ for all frequency lines, that is:\n",
                "$$\n",
                "\\mathbf{E}_o(\\boldsymbol{\\theta}) = \\begin{bmatrix}\n",
                "\\boldsymbol{\\varepsilon}_o(\\omega_1, \\boldsymbol{\\theta}) \\\\\n",
                "\\vdots \\\\\n",
                "\\boldsymbol{\\varepsilon}_o(\\omega_{n_f}, \\boldsymbol{\\theta})\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "Finally, the coefficients of the numerator and denominator polynomials are estimated by minimizing the following functional:\n",
                "$$\n",
                "J(\\boldsymbol{\\theta}) = \\sum_{o=1}^{n_o} \\Vert\\mathbf{E}_o(\\boldsymbol{\\theta})\\Vert^2.\n",
                "$$\n",
                "\n",
                "The poles of the transfer function are obtained from the characteristic polynomial associated with the denominator matrix $\\mathbf{D}(\\omega)$, by computing the eigenvalues of the so-called companion matrix[^3].\n",
                "\n",
                "[^3]: M. El-Kafafy, P. Guillaume, B. Peeters, F. Marra, G. Coppotelli. \"Advanced Frequency-Domain Modal Analysis for Dealing with Measurement Noise and Parameter Uncertainty\". In: Allemang R., De Clerck J., Niezrecki C., Blough J. (eds) Topics in Modal Analysis I, Volume 5. Conference Proceedings of the Society for Experimental Mechanics Series. 2012.\n",
                "\n",
                "### Stabilization diagram\n",
                "\n",
                "When carrying out an EMA, the main question that arises is how many modes (or, more precisely, poles) are contained within the frequency band of interest. Analyzing the frequency response functions (transfer functions) provides an initial estimate. However, it is difficult to distinguish between multiple or nearby modes.\n",
                "\n",
                "The stabilisation diagram is a fundamental EMA tool as it provides a clear and concise presentation of the poles of the system under study. The idea is to adjust the transfer function model by increasing the number of poles and displaying the results on a graph. Broadly speaking, increasing the order of the model (i.e. the number of poles) causes the true vibration modes to converge to a stable value, whereas the numerical modes appear inconsistently or randomly on the graph. Thus, as the poles converge to stable ones, markers appear on the graph to indicate the identified poles, as the order of the model is gradually increased. The selection of poles is generally based on the stability of natural frequencies, modal damping and/or mode shapes, moving from a model order $n$ to an order $n + 1$. In this package, the stability of the natural frequencies and damping ratios is used to identify the physical poles of the system. The stability criterion is set to 1% for the natural frequencies and 5% for the damping ratios, following common practice in the EMA field.\n",
                "\n",
                "In `StructuralVibration.jl`, the stabilization diagram can be obtained using the `stabilization` function along with any of the Mdof methods described above. The identified stable poles can then be visualized using the `stabilization_plot` function. The `stabilization` function returns an `EMAMdofStabilization` structure that contains all the information related to the stabilization analysis, which allows the user to manually select the appropriate poles and to further analyze (e.g. by using quality and analysis indicators) and visualize the results.\n",
                "\n",
                "## Mode shapes extraction\n",
                "\n",
                "Once the poles of the system have been identified using one of the Mdof methods described above, the residues can be computed to extract the mode shapes. In this package, the residues are computed using a least-squares approach based on the formulation of the FRFs as a sum of rational functions. The FRF between an output $p$ ($p = 1, \\ldots, n_o$) and an input $q$ ($q = 1, \\ldots, n_i$) can be expressed as:\n",
                "$$\n",
                "H_{pq}(\\omega) = \\sum_{i = 1}^n \\left(\\frac{{}_iR_{pq}}{j\\omega - \\lambda_i} + \\frac{{}_iR_{pq}^\\ast}{j\\omega - \\lambda_i^\\ast}\\right) - \\frac{L_{pq}}{\\omega^2} + U_{pq}(\\omega),\n",
                "$$\n",
                "where $R_{k, pq}$ is the residue associated with the pole $\\lambda_k$ and $L_{pq}$ and $U_{pq}$ are the lower and upper residuals, respectively, which account for the effect of the modes outside the frequency band of interest.\n",
                "\n",
                "At a frequency line $\\omega$, the previous equation can be rewritten in matrix form as:\n",
                "$$\n",
                "H_{pq}(\\omega) = \\begin{bmatrix}\n",
                "\\frac{1}{j\\omega - \\lambda_1} & \\ldots & \\frac{1}{j\\omega - \\lambda_n} & \\frac{1}{j\\omega - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega - \\lambda_n^\\ast} & -\\frac{1}{\\omega^2} & 1\n",
                "\\end{bmatrix}\n",
                "\\begin{bmatrix}\n",
                "{}_1R_{pq} \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq} \\\\\n",
                "{}_1R_{pq}^\\ast \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq}^\\ast \\\\\n",
                "L_{pq} \\\\\n",
                "U_{pq}\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "Repeating the previous equation for all frequency lines leads to the following system of equations:\n",
                "$$\n",
                "\\begin{bmatrix}\n",
                "H_{pq}(\\omega_1) \\\\\n",
                "H_{pq}(\\omega_2) \\\\\n",
                "\\vdots \\\\\n",
                "H_{pq}(\\omega_{n_f})\n",
                "\\end{bmatrix}\n",
                "= \\begin{bmatrix}\n",
                "\\frac{1}{j\\omega_1 - \\lambda_1} & \\ldots & \\frac{1}{j\\omega_1 - \\lambda_n} & \\frac{1}{j\\omega_1 - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega_1 - \\lambda_n^\\ast} & -\\frac{1}{\\omega_1^2} & 1 \\\\\n",
                "\\frac{1}{j\\omega_2 - \\lambda_1} & \\ldots & \\frac{1}{j\\omega_2 - \\lambda_n} & \\frac{1}{j\\omega_2 - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega_2 - \\lambda_n^\\ast} & -\\frac{1}{\\omega_2^2} & 1 \\\\\n",
                "\\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots & \\vdots \\\\\n",
                "\\frac{1}{j\\omega_{n_f} - \\lambda_1} & \\ldots & \\frac{1}{j\\omega_{n_f} - \\lambda_n} & \\frac{1}{j\\omega_{n_f} - \\lambda_1^\\ast} & \\ldots & \\frac{1}{j\\omega_{n_f} - \\lambda_n^\\ast} & -\\frac{1}{\\omega_{n_f}^2} & 1\n",
                "\\end{bmatrix}\n",
                "\\begin{bmatrix}\n",
                "{}_1R_{pq} \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq} \\\\\n",
                "{}_1R_{pq}^\\ast \\\\\n",
                "\\vdots \\\\\n",
                "{}_nR_{pq}^\\ast \\\\\n",
                "L_{pq} \\\\\n",
                "U_{pq}\n",
                "\\end{bmatrix}\n",
                "$$\n",
                "\n",
                "This system of equations can be solved in the least-squares sense to estimate the residues ${}_iR_{pq}$, as well as the lower and upper residuals $L_{pq}$ and $U_{pq}$. This procedure is implemented in the `mode_residues` function.\n",
                "\n",
                "From the estimated residues, the mode shapes can be extracted using the following relation:\n",
                "$$\n",
                "{}_iR_{pq} = c_i \\phi_{p,i} \\phi_{q,i},\n",
                "$$\n",
                "where $c_i$ is a scaling factor, $\\phi_{p,i}$ (resp. nd $\\phi_{q,i}$) is the $p$-th (resp. $q$-th) component of the mode shape associated with the $i$-th mode.\n",
                "\n",
                "To solve for the mode shapes, a collocated measurement is required, i.e. $p = q$. Thus, the mode shape components can be obtained as:\n",
                "$$\n",
                "\\phi_{p,i} = \\sqrt{\\frac{{}_iR_{pp}}{c_i}} \\; \\text{ and } \\; \\phi_{q,i} = \\frac{{}_iR_{pq}}{\\sqrt{c_i\\; {}_iR_{pp}}}.\n",
                "$$\n",
                "\n",
                "Here, the scaling factors $c_i$ can be computed based on a normalization criterion. In this package, the scaling factors are computed such that the modal mass of each mode shape is equal to one (mass normalization). The mode shapes can then be extracted using the `modeshape_extraction` function.\n",
                "\n",
                "## API\n",
                "\n",
                "**Data types**\n",
                "\n",
                "::: {.api}\n",
                "**EMAMdofProblem**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "4",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc EMAMdofProblem"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mEMAMdofProblem(frf, freq; frange = [freq[1], freq[end]])\u001b[39m\n\n  Data structure defining the inputs for EMA-MDOF modal extraction methods.\n\n  \u001b[1mConstructor parameters\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mfrf::Array{Complex,3}\u001b[39m: 3D array of Frequency Response Functions\n       (FRF) (array nm x ne x nf)\n    \u001b[34m• \u001b[39m \u001b[36mfreq::AbstractArray{Real}\u001b[39m: Vector of frequency values (Hz)\n    \u001b[34m• \u001b[39m \u001b[36mfrange::Vector{Real}\u001b[39m: Frequency range for analysis (default:\n       [freq[1], freq[end]])\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mfrf::Array{Complex, 3}\u001b[39m: 3D array of Frequency Response Functions\n       (FRF) (array nm x ne x nf)\n    \u001b[34m• \u001b[39m \u001b[36mfreq::AbstractArray{Real}\u001b[39m: Vector of frequency values (Hz)",
                        "text/markdown": "```julia\nEMAMdofProblem(frf, freq; frange = [freq[1], freq[end]])\n```\n\nData structure defining the inputs for EMA-MDOF modal extraction methods.\n\n**Constructor parameters**\n\n  * `frf::Array{Complex,3}`: 3D array of Frequency Response Functions (FRF) (array nm x ne x nf)\n  * `freq::AbstractArray{Real}`: Vector of frequency values (Hz)\n  * `frange::Vector{Real}`: Frequency range for analysis (default: [freq[1], freq[end]])\n\n**Fields**\n\n  * `frf::Array{Complex, 3}`: 3D array of Frequency Response Functions (FRF) (array nm x ne x nf)\n  * `freq::AbstractArray{Real}`: Vector of frequency values (Hz)\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">EMAMdofProblem&#40;frf, freq; frange &#61; &#91;freq&#91;1&#93;, freq&#91;end&#93;&#93;&#41;</code></pre>\n<p>Data structure defining the inputs for EMA-MDOF modal extraction methods.</p>\n<p><strong>Constructor parameters</strong></p>\n<ul>\n<li><p><code>frf::Array&#123;Complex,3&#125;</code>: 3D array of Frequency Response Functions &#40;FRF&#41; &#40;array nm x ne x nf&#41;</p>\n</li>\n<li><p><code>freq::AbstractArray&#123;Real&#125;</code>: Vector of frequency values &#40;Hz&#41;</p>\n</li>\n<li><p><code>frange::Vector&#123;Real&#125;</code>: Frequency range for analysis &#40;default: &#91;freq&#91;1&#93;, freq&#91;end&#93;&#93;&#41;</p>\n</li>\n</ul>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>frf::Array&#123;Complex, 3&#125;</code>: 3D array of Frequency Response Functions &#40;FRF&#41; &#40;array nm x ne x nf&#41;</p>\n</li>\n<li><p><code>freq::AbstractArray&#123;Real&#125;</code>: Vector of frequency values &#40;Hz&#41;</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nEMAMdofProblem(frf, freq; frange = [freq[1], freq[end]])\n\\end{verbatim}\nData structure defining the inputs for EMA-MDOF modal extraction methods.\n\n\\textbf{Constructor parameters}\n\n\\begin{itemize}\n\\item \\texttt{frf::Array\\{Complex,3\\}}: 3D array of Frequency Response Functions (FRF) (array nm x ne x nf)\n\n\n\\item \\texttt{freq::AbstractArray\\{Real\\}}: Vector of frequency values (Hz)\n\n\n\\item \\texttt{frange::Vector\\{Real\\}}: Frequency range for analysis (default: [freq[1], freq[end]])\n\n\\end{itemize}\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{frf::Array\\{Complex, 3\\}}: 3D array of Frequency Response Functions (FRF) (array nm x ne x nf)\n\n\n\\item \\texttt{freq::AbstractArray\\{Real\\}}: Vector of frequency values (Hz)\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "5",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**AutoEMAMdofProblem**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "6",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc AutoEMAMdofProblem"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mAutoEMAMdofProblem(prob, dpi, method; modetype)\u001b[39m\n\n  Structure containing the input data for automatic experimental modal\n  analysis using Mdof methods\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36morder::Int\u001b[39m: Model order (number of poles to extract)\n    \u001b[34m• \u001b[39m \u001b[36mdpi::Vector{Int}\u001b[39m: Driving point indices - default = [1, 1]\n       \n       \u001b[34m• \u001b[39m \u001b[36mdpi[1]\u001b[39m: Driving point index on the measurement mesh\n       \u001b[34m• \u001b[39m \u001b[36mdpi[2]\u001b[39m: Driving point index on the excitation mesh\n    \u001b[34m• \u001b[39m \u001b[36mmethod::MdofModalExtraction\u001b[39m: Method to extract the poles\n       \n       \u001b[34m• \u001b[39m \u001b[36mPeakPicking\u001b[39m: Peak picking method (default)\n       \u001b[34m• \u001b[39m \u001b[36mCircleFit\u001b[39m: Circle fitting method\n       \u001b[34m• \u001b[39m \u001b[36mLSFit\u001b[39m: Least squares fitting method\n    \u001b[34m• \u001b[39m \u001b[36mmodetype::Symbol\u001b[39m: Type of mode shapes to extract\n       \n       \u001b[34m• \u001b[39m \u001b[36m:real\u001b[39m: Real mode shapes (default)\n       \u001b[34m• \u001b[39m \u001b[36m:complex\u001b[39m: Complex mode shapes",
                        "text/markdown": "```julia\nAutoEMAMdofProblem(prob, dpi, method; modetype)\n```\n\nStructure containing the input data for automatic experimental modal analysis using Mdof methods\n\n**Fields**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `order::Int`: Model order (number of poles to extract)\n  * `dpi::Vector{Int}`: Driving point indices - default = [1, 1]\n\n      * `dpi[1]`: Driving point index on the measurement mesh\n      * `dpi[2]`: Driving point index on the excitation mesh\n  * `method::MdofModalExtraction`: Method to extract the poles\n\n      * `PeakPicking`: Peak picking method (default)\n      * `CircleFit`: Circle fitting method\n      * `LSFit`: Least squares fitting method\n  * `modetype::Symbol`: Type of mode shapes to extract\n\n      * `:real`: Real mode shapes (default)\n      * `:complex`: Complex mode shapes\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">AutoEMAMdofProblem&#40;prob, dpi, method; modetype&#41;</code></pre>\n<p>Structure containing the input data for automatic experimental modal analysis using Mdof methods</p>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>order::Int</code>: Model order &#40;number of poles to extract&#41;</p>\n</li>\n<li><p><code>dpi::Vector&#123;Int&#125;</code>: Driving point indices - default &#61; &#91;1, 1&#93;</p>\n<ul>\n<li><p><code>dpi&#91;1&#93;</code>: Driving point index on the measurement mesh</p>\n</li>\n<li><p><code>dpi&#91;2&#93;</code>: Driving point index on the excitation mesh</p>\n</li>\n</ul>\n</li>\n<li><p><code>method::MdofModalExtraction</code>: Method to extract the poles</p>\n<ul>\n<li><p><code>PeakPicking</code>: Peak picking method &#40;default&#41;</p>\n</li>\n<li><p><code>CircleFit</code>: Circle fitting method</p>\n</li>\n<li><p><code>LSFit</code>: Least squares fitting method</p>\n</li>\n</ul>\n</li>\n<li><p><code>modetype::Symbol</code>: Type of mode shapes to extract</p>\n<ul>\n<li><p><code>:real</code>: Real mode shapes &#40;default&#41;</p>\n</li>\n<li><p><code>:complex</code>: Complex mode shapes</p>\n</li>\n</ul>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nAutoEMAMdofProblem(prob, dpi, method; modetype)\n\\end{verbatim}\nStructure containing the input data for automatic experimental modal analysis using Mdof methods\n\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{order::Int}: Model order (number of poles to extract)\n\n\n\\item \\texttt{dpi::Vector\\{Int\\}}: Driving point indices - default = [1, 1]\n\n\\begin{itemize}\n\\item \\texttt{dpi[1]}: Driving point index on the measurement mesh\n\n\n\\item \\texttt{dpi[2]}: Driving point index on the excitation mesh\n\n\\end{itemize}\n\n\\item \\texttt{method::MdofModalExtraction}: Method to extract the poles\n\n\\begin{itemize}\n\\item \\texttt{PeakPicking}: Peak picking method (default)\n\n\n\\item \\texttt{CircleFit}: Circle fitting method\n\n\n\\item \\texttt{LSFit}: Least squares fitting method\n\n\\end{itemize}\n\n\\item \\texttt{modetype::Symbol}: Type of mode shapes to extract\n\n\\begin{itemize}\n\\item \\texttt{:real}: Real mode shapes (default)\n\n\n\\item \\texttt{:complex}: Complex mode shapes\n\n\\end{itemize}\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "7",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**EMAMdofSolution**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "8",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc EMAMdofSolution"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mEMAMdofSolution(poles, ϕn)\u001b[39m\n\n  Structure containing the solution of the automatic experimental modal\n  analysis using Mdof methods\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Extracted poles\n    \u001b[34m• \u001b[39m \u001b[36mms\u001b[39m: Mode shapes",
                        "text/markdown": "```julia\nEMAMdofSolution(poles, ϕn)\n```\n\nStructure containing the solution of the automatic experimental modal analysis using Mdof methods\n\n**Fields**\n\n  * `poles`: Extracted poles\n  * `ms`: Mode shapes\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">EMAMdofSolution&#40;poles, ϕn&#41;</code></pre>\n<p>Structure containing the solution of the automatic experimental modal analysis using Mdof methods</p>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>poles</code>: Extracted poles</p>\n</li>\n<li><p><code>ms</code>: Mode shapes</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nEMAMdofSolution(poles, ϕn)\n\\end{verbatim}\nStructure containing the solution of the automatic experimental modal analysis using Mdof methods\n\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{poles}: Extracted poles\n\n\n\\item \\texttt{ms}: Mode shapes\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "9",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**EMAMdofStabilization**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "10",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc EMAMdofStabilization"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mEMAMdofStabilization(prob, poles, modefn, mode_stabfn, mode_stabdr)\u001b[39m\n\n  Data structure summarizing the results of the stabilization analysis.\n\n  \u001b[1mFields\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36mfrange::Vector{Real}\u001b[39m: Frequency range used for the stabilization\n       analysis\n    \u001b[34m• \u001b[39m \u001b[36mpoles::Vector{Vector{Complex}}\u001b[39m: Vector of vectors containing\n       extracted poles at each model order\n    \u001b[34m• \u001b[39m \u001b[36mmodefn::Matrix{Real}\u001b[39m: Matrix containing the natural frequencies\n       (useful for plotting)\n    \u001b[34m• \u001b[39m \u001b[36mmode_stabfn::Matrix{Bool}\u001b[39m: Matrix indicating the stability of\n       natural frequencies\n    \u001b[34m• \u001b[39m \u001b[36mmode_stabdr::Matrix{Bool}\u001b[39m: Matrix indicating the stability of\n       damping ratios\n\n  \u001b[1mNote\u001b[22m\n\n  This structure is returned by the \u001b[36mstabilization\u001b[39m function after performing a\n  stabilization diagram analysis and used by \u001b[36mstabilization_plot\u001b[39m for\n  visualization.",
                        "text/markdown": "```julia\nEMAMdofStabilization(prob, poles, modefn, mode_stabfn, mode_stabdr)\n```\n\nData structure summarizing the results of the stabilization analysis.\n\n**Fields**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `frange::Vector{Real}`: Frequency range used for the stabilization analysis\n  * `poles::Vector{Vector{Complex}}`: Vector of vectors containing extracted poles at each model order\n  * `modefn::Matrix{Real}`: Matrix containing the natural frequencies (useful for plotting)\n  * `mode_stabfn::Matrix{Bool}`: Matrix indicating the stability of natural frequencies\n  * `mode_stabdr::Matrix{Bool}`: Matrix indicating the stability of damping ratios\n\n**Note**\n\nThis structure is returned by the `stabilization` function after performing a stabilization diagram analysis and used by `stabilization_plot` for visualization.\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">EMAMdofStabilization&#40;prob, poles, modefn, mode_stabfn, mode_stabdr&#41;</code></pre>\n<p>Data structure summarizing the results of the stabilization analysis.</p>\n<p><strong>Fields</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>frange::Vector&#123;Real&#125;</code>: Frequency range used for the stabilization analysis</p>\n</li>\n<li><p><code>poles::Vector&#123;Vector&#123;Complex&#125;&#125;</code>: Vector of vectors containing extracted poles at each model order</p>\n</li>\n<li><p><code>modefn::Matrix&#123;Real&#125;</code>: Matrix containing the natural frequencies &#40;useful for plotting&#41;</p>\n</li>\n<li><p><code>mode_stabfn::Matrix&#123;Bool&#125;</code>: Matrix indicating the stability of natural frequencies</p>\n</li>\n<li><p><code>mode_stabdr::Matrix&#123;Bool&#125;</code>: Matrix indicating the stability of damping ratios</p>\n</li>\n</ul>\n<p><strong>Note</strong></p>\n<p>This structure is returned by the <code>stabilization</code> function after performing a stabilization diagram analysis and used by <code>stabilization_plot</code> for visualization.</p>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nEMAMdofStabilization(prob, poles, modefn, mode_stabfn, mode_stabdr)\n\\end{verbatim}\nData structure summarizing the results of the stabilization analysis.\n\n\\textbf{Fields}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{frange::Vector\\{Real\\}}: Frequency range used for the stabilization analysis\n\n\n\\item \\texttt{poles::Vector\\{Vector\\{Complex\\}\\}}: Vector of vectors containing extracted poles at each model order\n\n\n\\item \\texttt{modefn::Matrix\\{Real\\}}: Matrix containing the natural frequencies (useful for plotting)\n\n\n\\item \\texttt{mode\\_stabfn::Matrix\\{Bool\\}}: Matrix indicating the stability of natural frequencies\n\n\n\\item \\texttt{mode\\_stabdr::Matrix\\{Bool\\}}: Matrix indicating the stability of damping ratios\n\n\\end{itemize}\n\\textbf{Note}\n\nThis structure is returned by the \\texttt{stabilization} function after performing a stabilization diagram analysis and used by \\texttt{stabilization\\_plot} for visualization.\n\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "11",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "**Related functions**\n",
                "\n",
                "::: {.api}\n",
                "**poles_extraction**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "12",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc poles_extraction(::EMAMdofProblem, ::Int, ::LSCE)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mpoles_extraction(prob, order, method = LSCF(); stabdiag = false)\u001b[39m\n\n  Extract complex poles from Frequency Response Function (FRF) data using the\n  specified modal extraction method.\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36morder::Int\u001b[39m: Model order (number of poles to extract)\n    \u001b[34m• \u001b[39m \u001b[36mmethod\u001b[39m: Modal extraction method\n       \n       \u001b[34m• \u001b[39m \u001b[36mLSCE()\u001b[39m: Least Squares Complex Exponential method\n       \u001b[34m• \u001b[39m \u001b[36mLSCF()\u001b[39m: Least Squares Complex Frequency method (default)\n       \u001b[34m• \u001b[39m \u001b[36mPLSCF()\u001b[39m: Polyreference Least Squares Complex Frequency\n       method\n    \u001b[34m• \u001b[39m \u001b[36mstabdiag\u001b[39m: Boolean to indicate the function is used to build a\n       stability diagram (default: false)\n\n  \u001b[1mOutput\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Vector of extracted complex poles\n\n  \u001b[1mNote\u001b[22m\n\n  The \u001b[36mweighting\u001b[39m parameter is only applicable for the LSCF and PLSCF methods.",
                        "text/markdown": "```julia\npoles_extraction(prob, order, method = LSCF(); stabdiag = false)\n```\n\nExtract complex poles from Frequency Response Function (FRF) data using the specified modal extraction method.\n\n**Inputs**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `order::Int`: Model order (number of poles to extract)\n  * `method`: Modal extraction method\n\n      * `LSCE()`: Least Squares Complex Exponential method\n      * `LSCF()`: Least Squares Complex Frequency method (default)\n      * `PLSCF()`: Polyreference Least Squares Complex Frequency method\n  * `stabdiag`: Boolean to indicate the function is used to build a stability diagram (default: false)\n\n**Output**\n\n  * `poles`: Vector of extracted complex poles\n\n**Note**\n\nThe `weighting` parameter is only applicable for the LSCF and PLSCF methods.\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">poles_extraction&#40;prob, order, method &#61; LSCF&#40;&#41;; stabdiag &#61; false&#41;</code></pre>\n<p>Extract complex poles from Frequency Response Function &#40;FRF&#41; data using the specified modal extraction method.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>order::Int</code>: Model order &#40;number of poles to extract&#41;</p>\n</li>\n<li><p><code>method</code>: Modal extraction method</p>\n<ul>\n<li><p><code>LSCE&#40;&#41;</code>: Least Squares Complex Exponential method</p>\n</li>\n<li><p><code>LSCF&#40;&#41;</code>: Least Squares Complex Frequency method &#40;default&#41;</p>\n</li>\n<li><p><code>PLSCF&#40;&#41;</code>: Polyreference Least Squares Complex Frequency method</p>\n</li>\n</ul>\n</li>\n<li><p><code>stabdiag</code>: Boolean to indicate the function is used to build a stability diagram &#40;default: false&#41;</p>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>poles</code>: Vector of extracted complex poles</p>\n</li>\n</ul>\n<p><strong>Note</strong></p>\n<p>The <code>weighting</code> parameter is only applicable for the LSCF and PLSCF methods.</p>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\npoles_extraction(prob, order, method = LSCF(); stabdiag = false)\n\\end{verbatim}\nExtract complex poles from Frequency Response Function (FRF) data using the specified modal extraction method.\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{order::Int}: Model order (number of poles to extract)\n\n\n\\item \\texttt{method}: Modal extraction method\n\n\\begin{itemize}\n\\item \\texttt{LSCE()}: Least Squares Complex Exponential method\n\n\n\\item \\texttt{LSCF()}: Least Squares Complex Frequency method (default)\n\n\n\\item \\texttt{PLSCF()}: Polyreference Least Squares Complex Frequency method\n\n\\end{itemize}\n\n\\item \\texttt{stabdiag}: Boolean to indicate the function is used to build a stability diagram (default: false)\n\n\\end{itemize}\n\\textbf{Output}\n\n\\begin{itemize}\n\\item \\texttt{poles}: Vector of extracted complex poles\n\n\\end{itemize}\n\\textbf{Note}\n\nThe \\texttt{weighting} parameter is only applicable for the LSCF and PLSCF methods.\n\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "13",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**stabilization**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "14",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc stabilization(::EMAMdofProblem)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mstabilization(prob, max_order, method; weighting = true, stabcrit = [0.01, 0.05])\u001b[39m\n\n  Perform stabilization diagram analysis using the specified modal extraction\n  method (LSCE, LSCF, or PLSCF).\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob::EMAMdofProblem\u001b[39m: EMA-MDOF problem containing FRF data and\n       frequency vector\n    \u001b[34m• \u001b[39m \u001b[36mmax_order::Int\u001b[39m: Maximum model order for the stabilization analysis\n    \u001b[34m• \u001b[39m \u001b[36mmethod\u001b[39m: Modal extraction method to use\n       \n       \u001b[34m• \u001b[39m \u001b[36mLSCE()\u001b[39m: Least Squares Complex Exponential method\n       \u001b[34m• \u001b[39m \u001b[36mLSCF()\u001b[39m: Least Squares Complex Frequency method (default)\n       \u001b[34m• \u001b[39m \u001b[36mPLSCF()\u001b[39m: Polyreference Least Squares Complex Frequency\n       method\n    \u001b[34m• \u001b[39m \u001b[36mfrange\u001b[39m: Frequency range for analysis (default: [freq[1],\n       freq[end]])\n    \u001b[34m• \u001b[39m \u001b[36mweighting\u001b[39m: Boolean to indicate if the weighting based on the\n       variance of each FRF is applied (default: true)\n    \u001b[34m• \u001b[39m \u001b[36mstabcrit\u001b[39m: Vector containing the stability criteria for natural\n       frequencies and damping ratios (default: [0.01, 0.05])\n\n  \u001b[1mOutput\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36msol\u001b[39m: Data structure containing the results of the stabilization\n       analysis",
                        "text/markdown": "```julia\nstabilization(prob, max_order, method; weighting = true, stabcrit = [0.01, 0.05])\n```\n\nPerform stabilization diagram analysis using the specified modal extraction method (LSCE, LSCF, or PLSCF).\n\n**Inputs**\n\n  * `prob::EMAMdofProblem`: EMA-MDOF problem containing FRF data and frequency vector\n  * `max_order::Int`: Maximum model order for the stabilization analysis\n  * `method`: Modal extraction method to use\n\n      * `LSCE()`: Least Squares Complex Exponential method\n      * `LSCF()`: Least Squares Complex Frequency method (default)\n      * `PLSCF()`: Polyreference Least Squares Complex Frequency method\n  * `frange`: Frequency range for analysis (default: [freq[1], freq[end]])\n  * `weighting`: Boolean to indicate if the weighting based on the variance of each FRF is applied (default: true)\n  * `stabcrit`: Vector containing the stability criteria for natural frequencies and damping ratios (default: [0.01, 0.05])\n\n**Output**\n\n  * `sol`: Data structure containing the results of the stabilization analysis\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">stabilization&#40;prob, max_order, method; weighting &#61; true, stabcrit &#61; &#91;0.01, 0.05&#93;&#41;</code></pre>\n<p>Perform stabilization diagram analysis using the specified modal extraction method &#40;LSCE, LSCF, or PLSCF&#41;.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob::EMAMdofProblem</code>: EMA-MDOF problem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>max_order::Int</code>: Maximum model order for the stabilization analysis</p>\n</li>\n<li><p><code>method</code>: Modal extraction method to use</p>\n<ul>\n<li><p><code>LSCE&#40;&#41;</code>: Least Squares Complex Exponential method</p>\n</li>\n<li><p><code>LSCF&#40;&#41;</code>: Least Squares Complex Frequency method &#40;default&#41;</p>\n</li>\n<li><p><code>PLSCF&#40;&#41;</code>: Polyreference Least Squares Complex Frequency method</p>\n</li>\n</ul>\n</li>\n<li><p><code>frange</code>: Frequency range for analysis &#40;default: &#91;freq&#91;1&#93;, freq&#91;end&#93;&#93;&#41;</p>\n</li>\n<li><p><code>weighting</code>: Boolean to indicate if the weighting based on the variance of each FRF is applied &#40;default: true&#41;</p>\n</li>\n<li><p><code>stabcrit</code>: Vector containing the stability criteria for natural frequencies and damping ratios &#40;default: &#91;0.01, 0.05&#93;&#41;</p>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>sol</code>: Data structure containing the results of the stabilization analysis</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nstabilization(prob, max_order, method; weighting = true, stabcrit = [0.01, 0.05])\n\\end{verbatim}\nPerform stabilization diagram analysis using the specified modal extraction method (LSCE, LSCF, or PLSCF).\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob::EMAMdofProblem}: EMA-MDOF problem containing FRF data and frequency vector\n\n\n\\item \\texttt{max\\_order::Int}: Maximum model order for the stabilization analysis\n\n\n\\item \\texttt{method}: Modal extraction method to use\n\n\\begin{itemize}\n\\item \\texttt{LSCE()}: Least Squares Complex Exponential method\n\n\n\\item \\texttt{LSCF()}: Least Squares Complex Frequency method (default)\n\n\n\\item \\texttt{PLSCF()}: Polyreference Least Squares Complex Frequency method\n\n\\end{itemize}\n\n\\item \\texttt{frange}: Frequency range for analysis (default: [freq[1], freq[end]])\n\n\n\\item \\texttt{weighting}: Boolean to indicate if the weighting based on the variance of each FRF is applied (default: true)\n\n\n\\item \\texttt{stabcrit}: Vector containing the stability criteria for natural frequencies and damping ratios (default: [0.01, 0.05])\n\n\\end{itemize}\n\\textbf{Output}\n\n\\begin{itemize}\n\\item \\texttt{sol}: Data structure containing the results of the stabilization analysis\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "15",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**stabilization_plot**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "16",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc stabilization_plot(::EMAMdofStabilization)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mstabilization_plot(stab::EMAMdofStabilization, indicator = :psif; type = :dis)\u001b[39m\n\n  Plot stabilization diagram for EMA-MDOF pole stability analysis.\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mstab\u001b[39m: EMA-MDOF stabilization data\n    \u001b[34m• \u001b[39m \u001b[36mindicator\u001b[39m: Indicator to plot\n       \n       \u001b[34m• \u001b[39m \u001b[36m:psif\u001b[39m : Power spectrum indicator function\n       \u001b[34m• \u001b[39m \u001b[36m:cmif\u001b[39m : Complex mode indicator function\n    \u001b[34m• \u001b[39m \u001b[36mtype\u001b[39m: Type of FRF (for CMIF calculation)\n       \n       \u001b[34m• \u001b[39m \u001b[36m:dis\u001b[39m : Displacement (default)\n       \u001b[34m• \u001b[39m \u001b[36m:vel\u001b[39m : Velocity\n       \u001b[34m• \u001b[39m \u001b[36m:acc\u001b[39m : Acceleration\n\n  \u001b[1mOutput\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mfig\u001b[39m: Figure",
                        "text/markdown": "```julia\nstabilization_plot(stab::EMAMdofStabilization, indicator = :psif; type = :dis)\n```\n\nPlot stabilization diagram for EMA-MDOF pole stability analysis.\n\n**Inputs**\n\n  * `stab`: EMA-MDOF stabilization data\n  * `indicator`: Indicator to plot\n\n      * `:psif` : Power spectrum indicator function\n      * `:cmif` : Complex mode indicator function\n  * `type`: Type of FRF (for CMIF calculation)\n\n      * `:dis` : Displacement (default)\n      * `:vel` : Velocity\n      * `:acc` : Acceleration\n\n**Output**\n\n  * `fig`: Figure\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">stabilization_plot&#40;stab::EMAMdofStabilization, indicator &#61; :psif; type &#61; :dis&#41;</code></pre>\n<p>Plot stabilization diagram for EMA-MDOF pole stability analysis.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>stab</code>: EMA-MDOF stabilization data</p>\n</li>\n<li><p><code>indicator</code>: Indicator to plot</p>\n<ul>\n<li><p><code>:psif</code> : Power spectrum indicator function</p>\n</li>\n<li><p><code>:cmif</code> : Complex mode indicator function</p>\n</li>\n</ul>\n</li>\n<li><p><code>type</code>: Type of FRF &#40;for CMIF calculation&#41;</p>\n<ul>\n<li><p><code>:dis</code> : Displacement &#40;default&#41;</p>\n</li>\n<li><p><code>:vel</code> : Velocity</p>\n</li>\n<li><p><code>:acc</code> : Acceleration</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>fig</code>: Figure</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nstabilization_plot(stab::EMAMdofStabilization, indicator = :psif; type = :dis)\n\\end{verbatim}\nPlot stabilization diagram for EMA-MDOF pole stability analysis.\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{stab}: EMA-MDOF stabilization data\n\n\n\\item \\texttt{indicator}: Indicator to plot\n\n\\begin{itemize}\n\\item \\texttt{:psif} : Power spectrum indicator function\n\n\n\\item \\texttt{:cmif} : Complex mode indicator function\n\n\\end{itemize}\n\n\\item \\texttt{type}: Type of FRF (for CMIF calculation)\n\n\\begin{itemize}\n\\item \\texttt{:dis} : Displacement (default)\n\n\n\\item \\texttt{:vel} : Velocity\n\n\n\\item \\texttt{:acc} : Acceleration\n\n\\end{itemize}\n\\end{itemize}\n\\textbf{Output}\n\n\\begin{itemize}\n\\item \\texttt{fig}: Figure\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "17",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**mode_residues**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "18",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc mode_residues(::EMAMdofProblem, ::Vector{T}) where {T <: Complex}"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mmode_residues(frf, freq, poles; frange = [freq[1], freq[end]], type = :dis)\u001b[39m\n\n  Compute residues and lower and upper residuals of a frequency response\n  function (FRF) given its poles.\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob\u001b[39m: EMAMdofProblem containing FRF data and frequency vector\n    \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Vector of complex poles\n\n  \u001b[1mKeyword Arguments\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mfrange\u001b[39m: Frequency range for residue calculation (default: full\n       range)\n    \u001b[34m• \u001b[39m \u001b[36mtype\u001b[39m: Type of FRF\n       \n       \u001b[34m• \u001b[39m \u001b[36m:dis\u001b[39m: Admittance (default)\n       \u001b[34m• \u001b[39m \u001b[36m:vel\u001b[39m: Mobility\n       \u001b[34m• \u001b[39m \u001b[36m:acc\u001b[39m: Accelerance\n\n  \u001b[1mOutputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mres\u001b[39m: Residues corresponding to each pole\n    \u001b[34m• \u001b[39m \u001b[36mlr\u001b[39m: Lower residual\n    \u001b[34m• \u001b[39m \u001b[36mur\u001b[39m: Upper residual",
                        "text/markdown": "```julia\nmode_residues(frf, freq, poles; frange = [freq[1], freq[end]], type = :dis)\n```\n\nCompute residues and lower and upper residuals of a frequency response function (FRF) given its poles.\n\n**Inputs**\n\n  * `prob`: EMAMdofProblem containing FRF data and frequency vector\n  * `poles`: Vector of complex poles\n\n**Keyword Arguments**\n\n  * `frange`: Frequency range for residue calculation (default: full range)\n  * `type`: Type of FRF\n\n      * `:dis`: Admittance (default)\n      * `:vel`: Mobility\n      * `:acc`: Accelerance\n\n**Outputs**\n\n  * `res`: Residues corresponding to each pole\n  * `lr`: Lower residual\n  * `ur`: Upper residual\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">mode_residues&#40;frf, freq, poles; frange &#61; &#91;freq&#91;1&#93;, freq&#91;end&#93;&#93;, type &#61; :dis&#41;</code></pre>\n<p>Compute residues and lower and upper residuals of a frequency response function &#40;FRF&#41; given its poles.</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob</code>: EMAMdofProblem containing FRF data and frequency vector</p>\n</li>\n<li><p><code>poles</code>: Vector of complex poles</p>\n</li>\n</ul>\n<p><strong>Keyword Arguments</strong></p>\n<ul>\n<li><p><code>frange</code>: Frequency range for residue calculation &#40;default: full range&#41;</p>\n</li>\n<li><p><code>type</code>: Type of FRF</p>\n<ul>\n<li><p><code>:dis</code>: Admittance &#40;default&#41;</p>\n</li>\n<li><p><code>:vel</code>: Mobility</p>\n</li>\n<li><p><code>:acc</code>: Accelerance</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Outputs</strong></p>\n<ul>\n<li><p><code>res</code>: Residues corresponding to each pole</p>\n</li>\n<li><p><code>lr</code>: Lower residual</p>\n</li>\n<li><p><code>ur</code>: Upper residual</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nmode_residues(frf, freq, poles; frange = [freq[1], freq[end]], type = :dis)\n\\end{verbatim}\nCompute residues and lower and upper residuals of a frequency response function (FRF) given its poles.\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob}: EMAMdofProblem containing FRF data and frequency vector\n\n\n\\item \\texttt{poles}: Vector of complex poles\n\n\\end{itemize}\n\\textbf{Keyword Arguments}\n\n\\begin{itemize}\n\\item \\texttt{frange}: Frequency range for residue calculation (default: full range)\n\n\n\\item \\texttt{type}: Type of FRF\n\n\\begin{itemize}\n\\item \\texttt{:dis}: Admittance (default)\n\n\n\\item \\texttt{:vel}: Mobility\n\n\n\\item \\texttt{:acc}: Accelerance\n\n\\end{itemize}\n\\end{itemize}\n\\textbf{Outputs}\n\n\\begin{itemize}\n\\item \\texttt{res}: Residues corresponding to each pole\n\n\n\\item \\texttt{lr}: Lower residual\n\n\n\\item \\texttt{ur}: Upper residual\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "19",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**modeshape_extraction**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "20",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc modeshape_extraction(::Array{T, 3}, ::Vector{T}, ::Vector{Int}) where {T <: Complex}"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36mmodeshape_extraction(residues, poles, di = [1, 1]; type = :complex)\u001b[39m\n\n  Extract mode shapes using MDOF approximation\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mresidues\u001b[39m: Residues matrix of size (np, nm, ne)\n    \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Vector of complex poles\n    \u001b[34m• \u001b[39m \u001b[36mdpi\u001b[39m: Driving point indices - default = [1, 1]\n       \n       \u001b[34m• \u001b[39m \u001b[36mdpi[1]\u001b[39m: Driving point index on the measurement mesh\n       \u001b[34m• \u001b[39m \u001b[36mdpi[2]\u001b[39m: Driving point index on the excitation mesh\n    \u001b[34m• \u001b[39m \u001b[36mtype\u001b[39m: Type of mode shape\n       \n       \u001b[34m• \u001b[39m \u001b[36m:complex\u001b[39m: Complex mode shapes (default)\n       \u001b[34m• \u001b[39m \u001b[36m:real\u001b[39m: Real mode shapes\n\n  \u001b[1mOutputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mϕ\u001b[39m: Mode shapes matrix\n    \u001b[34m• \u001b[39m \u001b[36mci\u001b[39m: Scaling factors vector",
                        "text/markdown": "```julia\nmodeshape_extraction(residues, poles, di = [1, 1]; type = :complex)\n```\n\nExtract mode shapes using MDOF approximation\n\n**Inputs**\n\n  * `residues`: Residues matrix of size (np, nm, ne)\n  * `poles`: Vector of complex poles\n  * `dpi`: Driving point indices - default = [1, 1]\n\n      * `dpi[1]`: Driving point index on the measurement mesh\n      * `dpi[2]`: Driving point index on the excitation mesh\n  * `type`: Type of mode shape\n\n      * `:complex`: Complex mode shapes (default)\n      * `:real`: Real mode shapes\n\n**Outputs**\n\n  * `ϕ`: Mode shapes matrix\n  * `ci`: Scaling factors vector\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">modeshape_extraction&#40;residues, poles, di &#61; &#91;1, 1&#93;; type &#61; :complex&#41;</code></pre>\n<p>Extract mode shapes using MDOF approximation</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>residues</code>: Residues matrix of size &#40;np, nm, ne&#41;</p>\n</li>\n<li><p><code>poles</code>: Vector of complex poles</p>\n</li>\n<li><p><code>dpi</code>: Driving point indices - default &#61; &#91;1, 1&#93;</p>\n<ul>\n<li><p><code>dpi&#91;1&#93;</code>: Driving point index on the measurement mesh</p>\n</li>\n<li><p><code>dpi&#91;2&#93;</code>: Driving point index on the excitation mesh</p>\n</li>\n</ul>\n</li>\n<li><p><code>type</code>: Type of mode shape</p>\n<ul>\n<li><p><code>:complex</code>: Complex mode shapes &#40;default&#41;</p>\n</li>\n<li><p><code>:real</code>: Real mode shapes</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Outputs</strong></p>\n<ul>\n<li><p><code>ϕ</code>: Mode shapes matrix</p>\n</li>\n<li><p><code>ci</code>: Scaling factors vector</p>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nmodeshape_extraction(residues, poles, di = [1, 1]; type = :complex)\n\\end{verbatim}\nExtract mode shapes using MDOF approximation\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{residues}: Residues matrix of size (np, nm, ne)\n\n\n\\item \\texttt{poles}: Vector of complex poles\n\n\n\\item \\texttt{dpi}: Driving point indices - default = [1, 1]\n\n\\begin{itemize}\n\\item \\texttt{dpi[1]}: Driving point index on the measurement mesh\n\n\n\\item \\texttt{dpi[2]}: Driving point index on the excitation mesh\n\n\\end{itemize}\n\n\\item \\texttt{type}: Type of mode shape\n\n\\begin{itemize}\n\\item \\texttt{:complex}: Complex mode shapes (default)\n\n\n\\item \\texttt{:real}: Real mode shapes\n\n\\end{itemize}\n\\end{itemize}\n\\textbf{Outputs}\n\n\\begin{itemize}\n\\item \\texttt{ϕ}: Mode shapes matrix\n\n\n\\item \\texttt{ci}: Scaling factors vector\n\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "21",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "::: {.api}\n",
                "**solve**\n",
                "\n",
                "---"
            ]
        },
        {
            "id": "22",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "@doc solve(::AutoEMAMdofProblem)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "  \u001b[36msolve(prob::AutoEMAMdofProblem)\u001b[39m\n\n  Solve automatically experimental modal analysis problem using Mdof methods\n\n  \u001b[1mInputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36mprob_ema\u001b[39m: Structure containing the input data for automatic\n       experimental modal analysis using Mdof methods\n\n  \u001b[1mOutputs\u001b[22m\n\n    \u001b[34m• \u001b[39m \u001b[36msol\u001b[39m: Solution of problem:\n       \n       \u001b[34m• \u001b[39m \u001b[36mpoles\u001b[39m: Extracted poles\n       \u001b[34m• \u001b[39m \u001b[36mms\u001b[39m: Real mode shapes",
                        "text/markdown": "```julia\nsolve(prob::AutoEMAMdofProblem)\n```\n\nSolve automatically experimental modal analysis problem using Mdof methods\n\n**Inputs**\n\n  * `prob_ema`: Structure containing the input data for automatic experimental modal analysis using Mdof methods\n\n**Outputs**\n\n  * `sol`: Solution of problem:\n\n      * `poles`: Extracted poles\n      * `ms`: Real mode shapes\n",
                        "text/html": "<div class=\"markdown\"><pre><code class=\"language-julia\">solve&#40;prob::AutoEMAMdofProblem&#41;</code></pre>\n<p>Solve automatically experimental modal analysis problem using Mdof methods</p>\n<p><strong>Inputs</strong></p>\n<ul>\n<li><p><code>prob_ema</code>: Structure containing the input data for automatic experimental modal analysis using Mdof methods</p>\n</li>\n</ul>\n<p><strong>Outputs</strong></p>\n<ul>\n<li><p><code>sol</code>: Solution of problem:</p>\n<ul>\n<li><p><code>poles</code>: Extracted poles</p>\n</li>\n<li><p><code>ms</code>: Real mode shapes</p>\n</li>\n</ul>\n</li>\n</ul>\n\n\n</div>",
                        "text/latex": "\\begin{verbatim}\nsolve(prob::AutoEMAMdofProblem)\n\\end{verbatim}\nSolve automatically experimental modal analysis problem using Mdof methods\n\n\\textbf{Inputs}\n\n\\begin{itemize}\n\\item \\texttt{prob\\_ema}: Structure containing the input data for automatic experimental modal analysis using Mdof methods\n\n\\end{itemize}\n\\textbf{Outputs}\n\n\\begin{itemize}\n\\item \\texttt{sol}: Solution of problem:\n\n\\begin{itemize}\n\\item \\texttt{poles}: Extracted poles\n\n\n\\item \\texttt{ms}: Real mode shapes\n\n\\end{itemize}\n\\end{itemize}\n"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "23",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::\n",
                "\n",
                "## Example\n",
                "\n",
                "### Data preparation and FRF calculation"
            ]
        },
        {
            "id": "24",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| output: false\n",
                "# Structure parameters of the beam\n",
                "L = 1.        # Length\n",
                "b = 0.03      # Width\n",
                "h = 0.01      # Thickness\n",
                "S = b*h       # Cross-section area\n",
                "Iz = b*h^3/12 # Moment of inertia\n",
                "\n",
                "# Material parameters\n",
                "E = 2.1e11  # Young's modulus\n",
                "ρ = 7850.   # Density\n",
                "ξ = 0.01    # Damping ratio\n",
                "\n",
                "# Mesh\n",
                "xexc = 0:0.05:L\n",
                "xm = xexc[2]\n",
                "\n",
                "# Mode calculation - Simply supported boundary conditions\n",
                "beam = Beam(L, S, Iz, E, ρ)\n",
                "fmax = 500.\n",
                "\n",
                "ωn, kn = modefreq(beam, 2fmax)\n",
                "ϕexc = modeshape(beam, kn, xexc)\n",
                "ϕm = modeshape(beam, kn, xm)\n",
                "\n",
                "# FRF calculation\n",
                "freq = 1.:0.1:fmax\n",
                "prob = ModalFRFProblem(ωn, ξ, freq, ϕm, ϕexc)\n",
                "H = solve(prob; ismat = true).u"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "1×21×4991 Array{ComplexF64, 3}:\n[:, :, 1] =\n 0.0+0.0im  1.39556e-6-8.82659e-10im  …  6.11271e-22-6.07576e-25im\n\n[:, :, 2] =\n 0.0+0.0im  1.39594e-6-9.71617e-10im  …  6.11554e-22-6.68872e-25im\n\n[:, :, 3] =\n 0.0+0.0im  1.39634e-6-1.06077e-9im  …  6.11865e-22-7.30322e-25im\n\n;;; … \n\n[:, :, 4989] =\n 0.0+0.0im  4.40444e-8-1.02645e-8im  …  1.155e-22-3.85415e-24im\n\n[:, :, 4990] =\n 0.0+0.0im  4.42484e-8-1.02773e-8im  …  1.15553e-22-3.87119e-24im\n\n[:, :, 4991] =\n 0.0+0.0im  4.44526e-8-1.02902e-8im  …  1.15606e-22-3.88827e-24im"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "25",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "### Poles extraction"
            ]
        },
        {
            "id": "26",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "# EMA-MDOF problem\n",
                "prob_mdof = EMAMdofProblem(H, freq)\n",
                "\n",
                "# Poles extraction\n",
                "order = 10 # Model order\n",
                "p_lsce = poles_extraction(prob_mdof, order, LSCE())\n",
                "p_lscf = poles_extraction(prob_mdof, order, LSCF())\n",
                "p_plscf = poles_extraction(prob_mdof, order, PLSCF())\n",
                "\n",
                "# Stabilization diagram analysis using the LSCE method\n",
                "stab = stabilization(prob_mdof, order, LSCE())\n",
                "\n",
                "# Visualization of the stabilization diagram\n",
                "stabilization_plot(stab)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "image/png": "",
                        "text/html": "<img width=600 height=450 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>"
                    },
                    "metadata": {
                        "image/png": {
                            "width": 600,
                            "height": 450
                        }
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "27",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        },
        {
            "id": "28",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "# Natural frequencies and damping ratios\n",
                "\n",
                "fn_lsce, dr_lsce = poles2modal(p_lsce)\n",
                "fn_lscf, dr_lscf = poles2modal(p_lscf)\n",
                "fn_plscf, dr_plscf = poles2modal(p_plscf)\n",
                "\n",
                "fig_f = Figure()\n",
                "ax_f1 = Axis(fig_f[1, 1], title = \"Natural frequencies\", xlabel = \"Mode ID\", ylabel = \"Natural frequency [Hz]\")\n",
                "ax_f2 = Axis(fig_f[1, 2], title = \"Damping ratios\", xlabel = \"Mode ID\", ylabel = \"Damping ratio  (%)\")\n",
                "\n",
                "scatter!(ax_f1, 1:4, ωn[1:4]/2π, marker = :rect, markersize = 25, label = \"Reference\")\n",
                "scatter!(ax_f1, 1:4, fn_lsce, markersize = 20, label = \"LSCE\")\n",
                "scatter!(ax_f1, 1:4, fn_lscf, marker = :star4, markersize = 15, label = \"LSCF\")\n",
                "scatter!(ax_f1, 1:4, fn_plscf, marker = :circle, markersize = 10, label = \"PLSCF\")\n",
                "axislegend(ax_f1, position = :lt)\n",
                "\n",
                "scatter!(ax_f2, 1:4, 100ξ*ones(4), marker = :rect, markersize = 25, label = \"Reference\")\n",
                "scatter!(ax_f2, 1:4, 100dr_lsce, markersize = 20, label = \"LSCE\")\n",
                "scatter!(ax_f2, 1:4, 100dr_lscf, marker = :star4, markersize = 15, label = \"LSCF\")\n",
                "scatter!(ax_f2, 1:4, 100dr_plscf, marker = :circle, markersize = 10, label = \"PLSCF\")\n",
                "\n",
                "display(fig_f);"
            ],
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "image/png": "",
                        "text/html": "<img width=600 height=450 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>"
                    },
                    "metadata": {
                        "image/png": {
                            "width": 600,
                            "height": 450
                        }
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "29",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "### Mode shapes extraction"
            ]
        },
        {
            "id": "30",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| output: false\n",
                "\n",
                "# Driving point indices\n",
                "dpi = [1, 2]\n",
                "\n",
                "# Computation of the mode residues\n",
                "res = mode_residues(prob_mdof, p_lsce)[1]\n",
                "\n",
                "# Extraction of the mode shapes\n",
                "ϕ_est = modeshape_extraction(res, p_lsce, dpi, type = :real)[1]\n",
                "\n",
                "# Convert to real mode shapes\n",
                "ϕ_est_real = c2r_modeshape(ϕ_est)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "21×4 Matrix{Float64}:\n 0.0           0.0           0.0          0.0\n 0.144224      0.284734      0.418465     0.541705\n 0.284892      0.541639      0.74565      0.876481\n 0.418538      0.745582      0.910211     0.876445\n 0.541874      0.876578      0.876305     0.541611\n 0.651866      0.921759      0.651384    -0.000116707\n 0.745813      0.876661      0.284539    -0.541801\n 0.821402      0.745684     -0.144244    -0.876523\n 0.876769      0.541671     -0.541521    -0.876428\n 0.910546      0.284635     -0.820745    -0.541562\n ⋮                                       \n 0.876762     -0.541878     -0.541432     0.876443\n 0.821394     -0.745709     -0.144101     0.876314\n 0.745805     -0.876592      0.284717     0.541459\n 0.651858     -0.921725      0.651559    -0.000210571\n 0.541865     -0.876671      0.876431    -0.541804\n 0.418529     -0.745805      0.91027     -0.876471\n 0.284884     -0.541903      0.745655    -0.876401\n 0.14422      -0.284912      0.418453    -0.541625\n 1.12903e-16  -2.25828e-16   3.3864e-16  -4.51384e-16"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "31",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        },
        {
            "id": "32",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| echo: false\n",
                "# Mode shapes\n",
                "fig_mode = Figure()\n",
                "ax_mode1 = Axis(fig_mode[1, 1], title = \"Mode shape 1\", ylabel = \"Value\")\n",
                "ax_mode2 = Axis(fig_mode[1, 2], title = \"Mode shape 2\")\n",
                "ax_mode3 = Axis(fig_mode[2, 1], title = \"Mode shape 3\", xlabel = \"Position [m]\", ylabel = \"Value\")\n",
                "ax_mode4 = Axis(fig_mode[2, 2], title = \"Mode shape 4\", xlabel = \"Position [m]\")\n",
                "\n",
                "lines!(ax_mode1, xexc, ϕexc[:, 1], label = \"Reference\")\n",
                "lines!(ax_mode1, xexc, ϕ_est_real[:, 1], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode1, 0, L)\n",
                "axislegend(ax_mode1, position = :cb)\n",
                "\n",
                "lines!(ax_mode2, xexc, ϕexc[:, 2], label = \"Reference\")\n",
                "lines!(ax_mode2, xexc, ϕ_est_real[:, 2], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode2, 0, L)\n",
                "\n",
                "lines!(ax_mode3, xexc, ϕexc[:, 3], label = \"Reference\")\n",
                "lines!(ax_mode3, xexc, ϕ_est_real[:, 3], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode3, 0, L)\n",
                "\n",
                "lines!(ax_mode4, xexc, ϕexc[:, 4], label = \"Reference\")\n",
                "lines!(ax_mode4, xexc, ϕ_est_real[:, 4], linestyle = :dash, label = \"Estimated\")\n",
                "xlims!(ax_mode4, 0, L)\n",
                "\n",
                "display(fig_mode);"
            ],
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "image/png": "",
                        "text/html": "<img width=600 height=450 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>"
                    },
                    "metadata": {
                        "image/png": {
                            "width": 600,
                            "height": 450
                        }
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "33",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "### Automatic EMA-MDOF procedure"
            ]
        },
        {
            "id": "34",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| output: false\n",
                "order = 10\n",
                "prob_ema = AutoEMAMdofProblem(prob_mdof, order, dpi, LSCE())\n",
                "sol_ema = solve(prob_ema)\n",
                "fn_ema, ξn_ema = poles2modal(sol_ema.poles)\n",
                "ϕn_ema = sol_ema.ms"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "21×4 Matrix{Float64}:\n 0.0           0.0           0.0          0.0\n 0.144224      0.284734      0.418465     0.541705\n 0.284892      0.541639      0.74565      0.876481\n 0.418538      0.745582      0.910211     0.876445\n 0.541874      0.876578      0.876305     0.541611\n 0.651866      0.921759      0.651384    -0.000116707\n 0.745813      0.876661      0.284539    -0.541801\n 0.821402      0.745684     -0.144244    -0.876523\n 0.876769      0.541671     -0.541521    -0.876428\n 0.910546      0.284635     -0.820745    -0.541562\n ⋮                                       \n 0.876762     -0.541878     -0.541432     0.876443\n 0.821394     -0.745709     -0.144101     0.876314\n 0.745805     -0.876592      0.284717     0.541459\n 0.651858     -0.921725      0.651559    -0.000210571\n 0.541865     -0.876671      0.876431    -0.541804\n 0.418529     -0.745805      0.91027     -0.876471\n 0.284884     -0.541903      0.745655    -0.876401\n 0.14422      -0.284912      0.418453    -0.541625\n 1.12903e-16  -2.25828e-16   3.3864e-16  -4.51384e-16"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "35",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        }
    ],
    "timestamp": "2025-10-22T17:38:08.403",
    "file": "/Users/maucejo/Documents/01_Recherche/04_Projets/Codes/Julia/StructuralVibration/docs/modal_extraction/mdof_methods.qmd",
    "qnr_schema_version": "1.0.0"
}