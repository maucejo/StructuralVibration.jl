{
  "hash": "7dbf13cd0dc9588eeb6975c4dacac19f",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: VibrationData.jl\nengine: julia\nformat:\n  html:\n    page-layout: full\n    toc: false\n    number-sections: false\n    code-fold: true\n---\n\n\n\n\n<center>\n    ![](../assets/logo/doclogo.svg){width=35%}\n</center>\n\n`VibrationData.jl` is a Julia package designed to generate vibration data for mechanical systems. This package can be used for educational and research purposes. As a teacher, you can use it to illustrate vibration theory and its practical implementation. As a researcher, you can use it to test new methods on synthetic data.\n\n::: {.callout-warning}\nThe package is under active development and is not yet registered in the Julia General Registry. The package is developed as part of my research activities on source identification in structural dynamics and acoustics.\n:::\n\n## Features\n\nThe package provides the following features:\n\n### Mechanical models\n\n- **Discrete models**\n    - [x] Spring-mass-damper SDOF system\n    - [ ] Spring-mass-damper MDOF system\n    - [ ] FE models of bar, rod and beams\n- **Modal models of continuous model**\n    - [x] Longitudinal and torsional bars for various boundary conditions\n        - Clamped-clamped\n        - Clamped-free\n        - Free-free\n    - [x] Euler-Bernoulli beams for various boundary conditions\n        - Simply-supported at both ends\n        - Clamped-clamped\n        - Clamped-simply-supported\n        - Clamped-free\n        - Simply-supported-free\n    - [x] Simply-supported plate\n\n### Vibration data generation\n\n- **Excitation signals**\n    - [x] White noise\n    - [x] Triangle wave\n    - [x] Rectangular wave\n    - [x] Hammer impact\n    - [x] Smoothed rectangular wave\n    - [ ] Chirp\n\n- **Solution for SDOF systems**\n    - [x] Free response\n    - [x] Forced response due to a harmonic force or a base motion\n    - [x] Forced response due to any external force or base motion (Duhamel's integral)\n\n- **Time-domain integration schemes for linear systems**\n    - [x] Central difference scheme\n    - [x] RK4\n    - [x] Newmark-beta method\n    - [x] HHT\n    - [x] WBZ\n    - [x] Generalized-alpha\n    - [x] Mid-Point rule\n\n- **Frequency-domain calculations for linear systems**\n    - Frequency spectrum\n        - [x] Modal summation\n        - [ ] Direct method\n    - Frequency response function (FRF)\n        - [x] Modal summation\n        - [ ] Direct method\n\n### Measurement noise\n\n- [x] Addition of Gaussian white noise with a prescribed SNR\n- [x] Measurement noise variance estimation algorithms from noisy data\n    - [x] Bayesian estimation\n    - [x] D'Errico's method  - [Link to the Matlab version](https://fr.mathworks.com/matlabcentral/fileexchange/16683-estimatenoise)\n- [x] SNR estimation from estimated measurement noise variance\n\n## Reproducibility\n\nThe documentation of this package was built using this direct depedencies\n\n\n\n::: {#2 .cell execution_count=1}\n``` {.julia .cell-code}\nusing Pkg\nPkg.status()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nProject VibrationData v0.1.0\nStatus `P:\\Cnam\\Documents\\01_Recherche\\04_Projets\\Codes\\Julia\\VibrationData\\Project.toml`\n  [717857b8] DSP v0.8.0\n  [a98d9a8b] Interpolations v0.15.1\n  [7031d0ef] LazyGrids v1.0.0\n  [d96e819e] Parameters v0.12.3\n  [aea7be01] PrecompileTools v1.2.1\n  [92933f4c] ProgressMeter v1.10.2\n  [f8b46487] TestItemRunner v1.0.5\n  [1c621080] TestItems v1.0.0\n  [37e2e46d] LinearAlgebra v1.11.0\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}